{"ast":null,"code":"var _jsxFileName = \"D:\\\\Final-Backup\\\\stock-chart\\\\src\\\\Components\\\\LoginPage\\\\LoginPage.js\";\nimport React, { Component } from 'react';\nimport './LoginPage.css';\nimport Container from 'react-bootstrap/Container';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CardTemplate extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: \"\",\n      color: \"\",\n      isAdmin: false\n    };\n    this.sendRequest = this.sendRequest.bind(this);\n    this.verifyData = this.verifyData.bind(this);\n  }\n\n  verifyData(e) {\n    e.preventDefault();\n    var name = document.getElementById(\"name\").value;\n    var password = document.getElementById(\"password\").value;\n    this.sendRequest(name, password);\n  }\n\n  sendRequest(name, password) {\n    var jsonBody = {\n      \"username\": name,\n      \"password\": password\n    };\n    this.setState({\n      isAdmin: name.includes(\"admin\") ? true : false\n    });\n    var requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(jsonBody)\n    };\n    fetch('https://authentication--service.herokuapp.com/authentication/signin', requestOptions).then(response => {\n      if (response.status === 200) {\n        this.setState({\n          message: \"Login Successfull\",\n          color: \"green\"\n        });\n        return response.json();\n      } else if (response.status === 401) {\n        this.setState({\n          message: \"Please confirm your email before login\",\n          color: \"red\"\n        });\n      } else {\n        this.setState({\n          message: \"UserName does not exist\",\n          color: \"red\"\n        });\n      }\n\n      return null;\n    }).then(data => {\n      if (data != null) {\n        console.log(data.accessToken);\n        console.log(data.id);\n        console.log(data.username);\n        this.props.authFunction(data.accessToken, data.id, data.username);\n        if (this.state.isAdmin === true) this.props.history.push({\n          pathname: '/adminHome'\n        });else {\n          this.props.history.push({\n            pathname: '/userHome'\n          });\n        }\n      }\n    });\n  }\n\n  render() {\n    var messagestyle = {\n      fontSize: '15px',\n      color: this.state.color\n    };\n    return /*#__PURE__*/_jsxDEV(Container, {\n      id: \"card-login\",\n      md: \"auto\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"text-center\",\n        id: \"text-header-login\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: this.props.type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            className: \"justify-content-center\",\n            onSubmit: this.verifyData,\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"User Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                id: \"name\",\n                type: \"text\",\n                placeholder: \"Enter Username\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                id: \"password\",\n                type: \"password\",\n                placeholder: \"Password\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              style: messagestyle,\n              children: this.state.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              type: \"submit\",\n              children: this.props.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n          className: \"text-muted\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"footer-text\",\n            children: this.props.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 53\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: this.props.hlink,\n            children: [\" \", this.props.hlinktext]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 100\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass LoginPage extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(CardTemplate, { ...this.props,\n      authFunction: this.props.authFunction,\n      history: this.props.history,\n      type: \"Login\",\n      text: \"Dont have an account ?\",\n      hlinktext: \"Sign Up\",\n      hlink: \"/signup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(LoginPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["D:/Final-Backup/stock-chart/src/Components/LoginPage/LoginPage.js"],"names":["React","Component","Container","Card","Button","Link","withRouter","Form","CardTemplate","constructor","props","state","message","color","isAdmin","sendRequest","bind","verifyData","e","preventDefault","name","document","getElementById","value","password","jsonBody","setState","includes","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","status","json","data","console","log","accessToken","id","username","authFunction","history","push","pathname","render","messagestyle","fontSize","type","text","hlink","hlinktext","LoginPage"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './LoginPage.css';\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  withRouter\r\n} from 'react-router-dom';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nclass CardTemplate extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            message:\"\",\r\n            color:\"\",\r\n            isAdmin:false\r\n        }\r\n        this.sendRequest = this.sendRequest.bind(this);\r\n        this.verifyData = this.verifyData.bind(this);\r\n    }\r\n\r\n    verifyData(e){\r\n        e.preventDefault();\r\n        var name = document.getElementById(\"name\").value;\r\n        var password = document.getElementById(\"password\").value;\r\n        this.sendRequest(name,password);\r\n    }\r\n\r\n    sendRequest(name,password) {\r\n        var jsonBody = {\r\n            \"username\":name,\r\n            \"password\":password\r\n        };\r\n        \r\n        this.setState({\r\n            isAdmin : name.includes(\"admin\")  ? true : false \r\n        });\r\n    \r\n        var requestOptions = {\r\n            method : 'POST',\r\n            headers: {'Content-Type':'application/json'},\r\n            body : JSON.stringify(jsonBody)\r\n        }\r\n\r\n        fetch('https://authentication--service.herokuapp.com/authentication/signin',requestOptions)\r\n            .then(response => {\r\n                if(response.status === 200){\r\n                    this.setState({message : \"Login Successfull\",color:\"green\"});\r\n                    return response.json()\r\n                }\r\n                else if(response.status === 401){\r\n                    this.setState({message : \"Please confirm your email before login\",color:\"red\"});\r\n                }\r\n                else{\r\n                    this.setState({message : \"UserName does not exist\",color:\"red\"});\r\n                }\r\n                return null;\r\n            }).then(data => {\r\n                if(data != null){\r\n                    console.log(data.accessToken);\r\n                    console.log(data.id);\r\n                    console.log(data.username);\r\n                    this.props.authFunction(data.accessToken,data.id,data.username);\r\n                    if(this.state.isAdmin === true)\r\n                        this.props.history.push({\r\n                            pathname : '/adminHome',\r\n                        });\r\n                    else{\r\n                        this.props.history.push({\r\n                            pathname : '/userHome',\r\n                        });\r\n                    }      \r\n                }\r\n            })\r\n    }\r\n\r\n    render() {\r\n        \r\n        var messagestyle = {\r\n            fontSize : '15px',   \r\n            color : this.state.color\r\n        }\r\n\r\n        return (\r\n            <Container id=\"card-login\" md=\"auto\">\r\n                <Card className=\"text-center\" id=\"text-header-login\">\r\n                <Card.Header>{this.props.type}</Card.Header>\r\n                <Card.Body>\r\n                    \r\n                    <Form className=\"justify-content-center\" onSubmit={this.verifyData}>\r\n                        <Form.Group>\r\n                            <Form.Label>User Name</Form.Label>\r\n                            <Form.Control id=\"name\" type=\"text\" placeholder=\"Enter Username\" required />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control id=\"password\" type=\"password\" placeholder=\"Password\" required />\r\n                        </Form.Group>\r\n\r\n                        <Card.Text style={messagestyle}>{this.state.message}</Card.Text> \r\n                        \r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            {this.props.type}\r\n                        </Button>\r\n                        \r\n                    </Form>\r\n                       \r\n                </Card.Body>\r\n                <Card.Footer className=\"text-muted\"><span id=\"footer-text\">{this.props.text}</span><Link to={this.props.hlink}> {this.props.hlinktext}</Link></Card.Footer> \r\n                </Card>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nclass LoginPage extends Component {\r\n    render() {\r\n        return (\r\n            <CardTemplate {...this.props} authFunction={this.props.authFunction} history={this.props.history} type=\"Login\" text=\"Dont have an account ?\" hlinktext=\"Sign Up\" hlink=\"/signup\"/>\r\n        );\r\n    }\r\n}\r\nexport default withRouter(LoginPage);"]},"metadata":{},"sourceType":"module"}