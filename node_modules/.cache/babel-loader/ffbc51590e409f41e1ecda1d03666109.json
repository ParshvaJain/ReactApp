{"ast":null,"code":"var _jsxFileName = \"D:\\\\stock-chart\\\\src\\\\Components\\\\ManageCompany\\\\ManageCompany.js\";\nimport React, { Component } from 'react';\nimport './ManageCompany.css';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport NavWithDropDown from '../NavBar';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CreateCompanyForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: '',\n      color: ''\n    };\n    this.createCompany = this.createCompany.bind(this);\n    this.sendRequest = this.sendRequest.bind(this);\n  }\n\n  createCompany(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var name = document.getElementById(\"formCompanyName\").value;\n    var turnover = document.getElementById(\"formTurnover\").value;\n    var ceo = document.getElementById(\"formCeo\").value;\n    var bod = document.getElementById(\"formBoardOfDirectors\").value;\n    var exchanges = document.getElementById(\"formExchanges\").value;\n    var sector = document.getElementById(\"formSector\").value;\n    var brief = document.getElementById(\"formBrief\").value;\n    var exchangeToCode = document.getElementById(\"formETC\").value;\n    let myMap = new Map();\n    var textArray = exchangeToCode.split(\",\");\n    let len = textArray.length;\n\n    for (var i = 0; i < len; i++) {\n      var exchange = textArray[i].split(\":\")[0];\n      var code = textArray[i].split(\":\")[1];\n      myMap.set(exchange, code);\n    }\n\n    exchanges = exchanges.split(\",\");\n    bod = bod.split(\",\");\n    this.sendRequest(name, turnover, ceo, bod, exchanges, sector, brief, myMap);\n  }\n\n  sendRequest(name, turnover, ceo, bod, exchanges, sector, brief, myMap) {\n    var ETCObj = {};\n    var inArray = [...myMap.entries()];\n    var length = inArray.length;\n\n    for (var i = 0; i < length; i++) {\n      ETCObj[inArray[i][0]] = inArray[i][1];\n    }\n\n    console.log(ETCObj);\n    var jsonBody = {\n      \"companyName\": name,\n      \"turnover\": turnover,\n      \"ceo\": ceo,\n      \"boardOfDirectors\": bod,\n      \"listedInExchanges\": exchanges,\n      \"sector\": sector,\n      \"brief\": brief,\n      \"exchangeToCode\": [...myMap.entries()]\n    };\n    console.log(JSON.stringify(jsonBody));\n    var requestOptions = {\n      method: 'POST',\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(jsonBody),\n      referrerPolicy: \"no-referrer\"\n    };\n    this.setState(() => {\n      fetch('http://localhost:8082/company/create', requestOptions).then(response => {\n        if (response.status === 200) {\n          this.setState({\n            message: \"New Company created \",\n            color: \"green\"\n          });\n          return response.json();\n        } else {\n          this.setState({\n            message: \"Error creating Company!\",\n            color: \"red\"\n          });\n        }\n\n        return null;\n      }).then(data => {\n        if (data != null) {\n          setTimeout(() => {\n            this.props.history.push(\"/adminHome\");\n          }, 2000);\n        }\n      });\n    });\n  }\n\n  render() {\n    var messagestyle = {\n      fontSize: '16px',\n      color: this.state.color\n    };\n    return /*#__PURE__*/_jsxDEV(Form, {\n      className: \"justify-content-center\",\n      onSubmit: this.createCompany,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formCompanyName\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Company Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Company name\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formTurnover\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Turnover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter Turnover in Crores\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formCeo\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"CEO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter CEO\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formBoardOfDirectors\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Board Of Directors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter directors in comma seperated\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formExchanges\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Exchanges\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter exchanges in comma seperated\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formSector\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Sector\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter Sector\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formBrief\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Brief\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter Brief\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formETC\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Exchange To Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter Code for each exchange\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Create Company\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: messagestyle,\n            children: this.state.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass EditCompanyForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      turnover: '',\n      ceo: '',\n      bod: '',\n      exchanges: '',\n      sector: '',\n      brief: '',\n      exchangeToCode: ''\n    };\n    this.updateForm = this.updateForm.bind(this);\n  }\n\n  updateForm() {\n    var jsonBody = {\n      \"companyName\": this.state.name,\n      \"turnover\": this.state.turnover,\n      \"ceo\": this.state.ceo,\n      \"boardOfDirectors\": this.state.bod,\n      \"listedInExchanges\": this.state.exchanges,\n      \"sector\": this.state.sector,\n      \"brief\": this.state.brief,\n      \"exchangeToCode\": this.state.exchangeToCode\n    };\n    var requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'mode': 'no-cors'\n      },\n      body: JSON.stringify(jsonBody),\n      referrerPolicy: \"no-referrer\"\n    };\n    fetch(`http://localhost:8082/company/update/${this.props.companyId}`, requestOptions).then(response => {\n      if (response.status === 200) {\n        console.log(\"in 200\");\n        return response.json();\n      } else {\n        console.log(\"in !200\");\n      }\n\n      return null;\n    }).then(data => {\n      console.log(data);\n      setTimeout(() => {\n        this.props.history.push(\"/adminHome\");\n      }, 2000);\n    });\n  }\n\n  componentDidMount() {\n    var requestOptions = {\n      method: 'GET',\n      headers: {\n        \"Authorization\": \"Bearer \" + this.props.getAuthToken()\n      }\n    };\n    console.log(this.props.ipoId);\n    fetch(`http://localhost:8082/company/${this.props.companyId}`, requestOptions).then(response => {\n      if (response.status === 200) {\n        return response.json();\n      }\n\n      return null;\n    }).then(data => {\n      console.log(data);\n\n      if (data != null) {\n        this.setState({\n          name: data.companyName,\n          turnover: data.turnover,\n          ceo: data.ceo,\n          bod: data.boardOfDirectors.toString(),\n          exchanges: data.listedInExchanges.toString(),\n          sector: data.sector,\n          brief: data.brief,\n          exchangeToCode: data.exchangeToCode.toString()\n        });\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Form, {\n      className: \"justify-content-center\",\n      onSubmit: this.getData,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formCompanyName\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Company Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          onChange: e => this.setState({\n            name: e.target.value\n          }),\n          value: this.state.name,\n          type: \"text\",\n          placeholder: \"Company name\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formTurnover\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Turnover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          onChange: e => this.setState({\n            turnover: e.target.value\n          }),\n          value: this.state.turnover,\n          placeholder: \"Enter Turnover in Crores\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formCeo\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"CEO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          onChange: e => this.setState({\n            ceo: e.target.value\n          }),\n          value: this.state.ceo,\n          type: \"text\",\n          placeholder: \"Enter CEO\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formBoardOfDirectors\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Board Of Directors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          onChange: e => this.setState({\n            bod: e.target.value\n          }),\n          value: this.state.bod,\n          type: \"text\",\n          placeholder: \"Enter directors in comma seperated\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formExchanges\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Exchanges\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          onChange: e => this.setState({\n            exchanges: e.target.value\n          }),\n          value: this.state.exchanges,\n          placeholder: \"Enter exchanges in comma seperated\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formSector\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Sector\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          onChange: e => this.setState({\n            sector: e.target.value\n          }),\n          value: this.state.sector,\n          type: \"text\",\n          placeholder: \"Enter Sector\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formBrief\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Brief\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          onChange: e => this.setState({\n            brief: e.target.value\n          }),\n          value: this.state.brief,\n          type: \"text\",\n          placeholder: \"Enter Brief\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formETC\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Exchange To Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          onChange: e => this.setState({\n            exchangeToCode: e.target.value\n          }),\n          value: this.state.exchangeToCode,\n          type: \"text\",\n          placeholder: \"Enter Code for each exchange\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        onClick: this.updateForm,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass CompanyCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      updateForm: false\n    };\n  }\n\n  render() {\n    var exchanges = this.props.exchanges;\n    var companyExchange = exchanges.toString();\n    return /*#__PURE__*/_jsxDEV(Card, {\n      bg: \"white\",\n      id: \"each-card-company\",\n      text: \"black\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: this.props.companyName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              md: \"3\",\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                children: \"Sector\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                children: \"Listed in Exchanges\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                children: \"TurnOver\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              md: \"3\",\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                children: this.props.sector\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                children: companyExchange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                children: this.props.turnover\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          id: \"edit-details-company\",\n          onClick: event => this.props.UpdateCompanyForm(event, this.props.companyId),\n          variant: \"primary\",\n          children: \"Edit Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass ManageCompany extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      createForm: false,\n      updateForm: false,\n      companyId: ''\n    };\n    this.DisplayData = this.DisplayData.bind(this);\n    this.CreateCompanyForm = this.CreateCompanyForm.bind(this);\n    this.UpdateCompanyForm = this.UpdateCompanyForm.bind(this);\n  }\n\n  DisplayData() {\n    var CompanyCardList = [];\n    var data = this.state.data;\n\n    for (var i = 0; i < data.length; i++) {\n      var companyBanner = /*#__PURE__*/_jsxDEV(CompanyCard, {\n        companyId: data[i].id,\n        companyName: data[i].companyName,\n        ceo: data[i].ceo,\n        turnover: data[i].turnover,\n        BOD: data[i].boardOfDirectors,\n        exchanges: data[i].listedInExchanges,\n        sector: data[i].sector,\n        brief: data[i].brief,\n        exchangeToCode: data[i].exchangeToCode,\n        UpdateCompanyForm: this.UpdateCompanyForm\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 33\n      }, this);\n\n      CompanyCardList.push(companyBanner);\n    }\n\n    return CompanyCardList;\n  }\n\n  CreateCompanyForm() {\n    this.setState({\n      createForm: true,\n      updateForm: false\n    });\n  }\n\n  UpdateCompanyForm(event, companyId) {\n    this.setState({\n      createForm: false,\n      updateForm: true,\n      companyId: companyId\n    });\n  }\n\n  componentDidMount() {\n    console.log(\"token\" + this.props.getAuthToken());\n    var requestOptions = {\n      method: 'GET',\n      headers: {\n        \"Authorization\": \"Bearer \" + this.props.getAuthToken()\n      }\n    };\n    fetch(\"http://localhost:8082/company/\", requestOptions).then(response => response.json()).then(data => {\n      this.setState({\n        data: data\n      });\n    });\n  }\n\n  render() {\n    let form;\n\n    if (this.state.createForm === true) {\n      form = /*#__PURE__*/_jsxDEV(CreateCompanyForm, { ...this.props,\n        history: this.props.history\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 20\n      }, this);\n    } else {\n      if (this.state.updateForm === true) {\n        form = /*#__PURE__*/_jsxDEV(EditCompanyForm, { ...this.props,\n          history: this.props.history,\n          companyId: this.state.companyId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 24\n        }, this);\n      } else {\n        form = /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.CreateCompanyForm,\n          id: \"add-new-company\",\n          variant: \"primary\",\n          children: \"Add New Company\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 24\n        }, this);\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NavWithDropDown, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        md: \"2\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"ipo-company\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              id: \"main-card-company\",\n              children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                id: \"card-header-company\",\n                children: \"Listed Companies\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                id: \"card-body-company\",\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(Row, {\n                    md: \"1\",\n                    children: this.DisplayData()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 441,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 440,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"form-company\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              id: \"form-card-company\",\n              children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                children: this.state.createForm === true ? 'Create New IPO' : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 453,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                id: \"form-body-company\",\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  md: \"1\",\n                  children: form\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 455,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 454,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ManageCompany;","map":{"version":3,"sources":["D:/stock-chart/src/Components/ManageCompany/ManageCompany.js"],"names":["React","Component","Container","Form","Button","NavWithDropDown","Card","Row","Col","CreateCompanyForm","constructor","props","state","message","color","createCompany","bind","sendRequest","event","preventDefault","stopPropagation","name","document","getElementById","value","turnover","ceo","bod","exchanges","sector","brief","exchangeToCode","myMap","Map","textArray","split","len","length","i","exchange","code","set","ETCObj","inArray","entries","console","log","jsonBody","JSON","stringify","requestOptions","method","mode","headers","body","referrerPolicy","setState","fetch","then","response","status","json","data","setTimeout","history","push","render","messagestyle","fontSize","EditCompanyForm","updateForm","companyId","componentDidMount","getAuthToken","ipoId","companyName","boardOfDirectors","toString","listedInExchanges","getData","e","target","CompanyCard","companyExchange","UpdateCompanyForm","ManageCompany","createForm","DisplayData","CompanyCardList","companyBanner","id","form"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './ManageCompany.css';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport NavWithDropDown from '../NavBar';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nclass CreateCompanyForm extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            message : '',\r\n            color : ''\r\n        }\r\n        this.createCompany = this.createCompany.bind(this);\r\n        this.sendRequest = this.sendRequest.bind(this);\r\n    }\r\n\r\n    createCompany(event) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        var name = document.getElementById(\"formCompanyName\").value;\r\n        var turnover = document.getElementById(\"formTurnover\").value;\r\n        var ceo = document.getElementById(\"formCeo\").value;\r\n        var bod = document.getElementById(\"formBoardOfDirectors\").value;\r\n        var exchanges = document.getElementById(\"formExchanges\").value;\r\n        var sector = document.getElementById(\"formSector\").value;\r\n        var brief = document.getElementById(\"formBrief\").value;\r\n        var exchangeToCode = document.getElementById(\"formETC\").value;\r\n        \r\n        let myMap = new Map();\r\n        var textArray = exchangeToCode.split(\",\")\r\n        let len = textArray.length;\r\n        for(var i=0;i<len;i++){\r\n            var exchange = textArray[i].split(\":\")[0];\r\n            var code = textArray[i].split(\":\")[1];\r\n            myMap.set(exchange,code);\r\n        }\r\n        exchanges = exchanges.split(\",\");\r\n        bod = bod.split(\",\");\r\n        this.sendRequest(name,turnover,ceo,bod,exchanges,sector,brief,myMap);\r\n    }\r\n\r\n    sendRequest(name,turnover,ceo,bod,exchanges,sector,brief,myMap){\r\n        var ETCObj = {};\r\n        var inArray = [...myMap.entries()]; \r\n        var length = inArray.length;\r\n        for(var i = 0; i < length; i++){\r\n            ETCObj[inArray[i][0]] = inArray[i][1];\r\n        }\r\n        console.log(ETCObj);\r\n\r\n        var jsonBody = {\r\n            \"companyName\" : name,\r\n            \"turnover\" : turnover,\r\n            \"ceo\" : ceo,\r\n            \"boardOfDirectors\" : bod,\r\n            \"listedInExchanges\" : exchanges,\r\n            \"sector\" : sector,\r\n            \"brief\" : brief,\r\n            \"exchangeToCode\" : [...myMap.entries()]\r\n        }\r\n        console.log(JSON.stringify(jsonBody));\r\n\r\n        var requestOptions = {\r\n            method : 'POST',\r\n            mode : 'cors',\r\n            headers: {'Content-Type':'application/json'},\r\n            body : JSON.stringify(jsonBody),\r\n            referrerPolicy:\"no-referrer\",\r\n        }\r\n        this.setState(() => {\r\n            fetch('http://localhost:8082/company/create',requestOptions)\r\n            .then(response => {\r\n                if(response.status  === 200) {\r\n                    this.setState({\r\n                        message : \"New Company created \",\r\n                        color : \"green\"\r\n                    })\r\n                    return response.json();\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        message:\"Error creating Company!\",\r\n                        color:\"red\"\r\n                    })\r\n                }\r\n                return null;\r\n            }).then(data => {\r\n                if(data != null){\r\n                    setTimeout(() => {\r\n                        this.props.history.push(\"/adminHome\");\r\n                    },2000);     \r\n                }\r\n            })\r\n        })      \r\n    }\r\n\r\n    render(){\r\n        \r\n        var messagestyle = {\r\n            fontSize : '16px',\r\n            color : this.state.color\r\n        }\r\n\r\n        return(\r\n            <Form className=\"justify-content-center\" onSubmit={this.createCompany}>\r\n                        <Form.Group controlId=\"formCompanyName\">\r\n                        <Form.Label>Company Name</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Company name\"  required/>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formTurnover\">\r\n                            <Form.Label>Turnover</Form.Label>\r\n                            <Form.Control  type=\"text\" placeholder=\"Enter Turnover in Crores\" required />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formCeo\">\r\n                            <Form.Label>CEO</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Enter CEO\" required />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formBoardOfDirectors\">\r\n                            <Form.Label>Board Of Directors</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Enter directors in comma seperated\" required />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formExchanges\">\r\n                            <Form.Label>Exchanges</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Enter exchanges in comma seperated\" required />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formSector\">\r\n                            <Form.Label>Sector</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Enter Sector\" required />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formBrief\">\r\n                            <Form.Label>Brief</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Enter Brief\" required />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formETC\">\r\n                            <Form.Label>Exchange To Code</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Enter Code for each exchange\" required />\r\n                        </Form.Group>\r\n\r\n                        <br></br>\r\n                        <br></br>\r\n                        <Row>\r\n                            <Col>\r\n                                <Button variant=\"primary\" type=\"submit\">\r\n                                Create Company\r\n                                </Button>\r\n                            </Col>\r\n                            \r\n                            <Col>\r\n                                <span style={messagestyle}>{this.state.message}</span>\r\n                            </Col>\r\n                        </Row>\r\n                     \r\n                    </Form>\r\n        );\r\n    }\r\n}\r\n\r\nclass EditCompanyForm extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            name:'',\r\n            turnover:'',\r\n            ceo:'',\r\n            bod: '',\r\n            exchanges :'',\r\n            sector: '',\r\n            brief : '',\r\n            exchangeToCode : ''\r\n        }\r\n        this.updateForm = this.updateForm.bind(this);\r\n    }\r\n\r\n    updateForm(){\r\n\r\n        var jsonBody = {\r\n            \"companyName\" : this.state.name,\r\n            \"turnover\" : this.state.turnover,\r\n            \"ceo\" : this.state.ceo,\r\n            \"boardOfDirectors\" : this.state.bod,\r\n            \"listedInExchanges\" : this.state.exchanges,\r\n            \"sector\" : this.state.sector,\r\n            \"brief\" : this.state.brief,\r\n            \"exchangeToCode\" : this.state.exchangeToCode\r\n        }\r\n        var requestOptions = {\r\n            method : 'POST',\r\n            headers: {'Content-Type':'application/json', 'mode' : 'no-cors'},\r\n            body : JSON.stringify(jsonBody),\r\n            referrerPolicy:\"no-referrer\",\r\n        }\r\n\r\n        fetch(`http://localhost:8082/company/update/${this.props.companyId}`,requestOptions)\r\n            .then(response => {\r\n                if(response.status  === 200) {\r\n                    console.log(\"in 200\");\r\n                    return response.json();\r\n                }\r\n                else{\r\n                    console.log(\"in !200\");\r\n                }\r\n                return null;\r\n            }).then(data => {\r\n                console.log(data);\r\n                setTimeout(() => {\r\n                    this.props.history.push(\"/adminHome\");\r\n                },2000);\r\n            })\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        var requestOptions = {\r\n            method : 'GET',\r\n            headers : {\"Authorization\" : \"Bearer \" + this.props.getAuthToken() }\r\n        }\r\n        console.log(this.props.ipoId);\r\n        fetch(`http://localhost:8082/company/${this.props.companyId}`,requestOptions)\r\n            .then(response => {\r\n                if(response.status  === 200) {\r\n                    return response.json();\r\n                }\r\n                return null;\r\n            }).then(data => {\r\n                console.log(data);\r\n                if(data != null){\r\n                    this.setState({\r\n                        name:data.companyName,\r\n                        turnover:data.turnover,\r\n                        ceo:data.ceo,\r\n                        bod: data.boardOfDirectors.toString(),\r\n                        exchanges :data.listedInExchanges.toString(),\r\n                        sector: data.sector,\r\n                        brief : data.brief,\r\n                        exchangeToCode : data.exchangeToCode.toString()\r\n                    });\r\n                }\r\n            })\r\n    }\r\n\r\n    render(){\r\n        \r\n        return(\r\n            <Form className=\"justify-content-center\" onSubmit={this.getData}>\r\n                        <Form.Group controlId=\"formCompanyName\">\r\n                        <Form.Label>Company Name</Form.Label>\r\n                            <Form.Control  onChange={e => this.setState({name : e.target.value})} value={this.state.name} type=\"text\" placeholder=\"Company name\" required/>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formTurnover\">\r\n                            <Form.Label>Turnover</Form.Label>\r\n                            <Form.Control  type=\"text\"  onChange={e => this.setState({turnover : e.target.value})} value={this.state.turnover} placeholder=\"Enter Turnover in Crores\" required />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formCeo\">\r\n                            <Form.Label>CEO</Form.Label>\r\n                            <Form.Control  onChange={e => this.setState({ceo : e.target.value})} value={this.state.ceo} type=\"text\" placeholder=\"Enter CEO\" required />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formBoardOfDirectors\">\r\n                            <Form.Label>Board Of Directors</Form.Label>\r\n                            <Form.Control  onChange={e => this.setState({bod : e.target.value})} value={this.state.bod} type=\"text\" placeholder=\"Enter directors in comma seperated\" required />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formExchanges\">\r\n                            <Form.Label>Exchanges</Form.Label>\r\n                            <Form.Control type=\"text\"  onChange={e => this.setState({exchanges : e.target.value})} value={this.state.exchanges} placeholder=\"Enter exchanges in comma seperated\" required />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formSector\">\r\n                            <Form.Label>Sector</Form.Label>\r\n                            <Form.Control  onChange={e => this.setState({sector : e.target.value})} value={this.state.sector}type=\"text\" placeholder=\"Enter Sector\" required />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formBrief\">\r\n                            <Form.Label>Brief</Form.Label>\r\n                            <Form.Control  onChange={e => this.setState({brief : e.target.value})} value={this.state.brief}type=\"text\" placeholder=\"Enter Brief\" required />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formETC\">\r\n                            <Form.Label>Exchange To Code</Form.Label>\r\n                            <Form.Control  onChange={e => this.setState({exchangeToCode : e.target.value})} value={this.state.exchangeToCode} type=\"text\" placeholder=\"Enter Code for each exchange\" required />\r\n                        </Form.Group>\r\n\r\n\r\n                        <br></br>\r\n                        <br></br>\r\n                        <Button variant=\"primary\" type=\"submit\" onClick={this.updateForm}>\r\n                            Update\r\n                        </Button>\r\n                    </Form>\r\n        );\r\n    }\r\n}\r\n\r\nclass CompanyCard extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            updateForm : false\r\n        }\r\n    }\r\n\r\n    render(){\r\n        var exchanges = this.props.exchanges;\r\n        var companyExchange = exchanges.toString();\r\n        return(\r\n            <Card bg=\"white\" id=\"each-card-company\" text=\"black\">\r\n                        <Card.Header>{this.props.companyName}</Card.Header>\r\n                        <Card.Body>\r\n                        <Card.Text>\r\n                            <Container>\r\n                            <Row md=\"3\">\r\n                                <Col>\r\n                                    Sector\r\n                                </Col>\r\n                                <Col>\r\n                                    Listed in Exchanges\r\n                                </Col>\r\n                                <Col>\r\n                                    TurnOver\r\n                                </Col> \r\n                            </Row>\r\n                            <br></br>\r\n                            <Row md=\"3\">\r\n                                <Col>\r\n                                    {this.props.sector}\r\n                                </Col>\r\n                                <Col>\r\n                                    {companyExchange}\r\n                                </Col>\r\n                                <Col>\r\n                                    {this.props.turnover}\r\n                                </Col> \r\n                            </Row>\r\n                            </Container>    \r\n                        </Card.Text>\r\n                        <Button id=\"edit-details-company\" onClick={(event) => this.props.UpdateCompanyForm(event,this.props.companyId)}  variant=\"primary\">Edit Details</Button>\r\n                        </Card.Body>\r\n                    </Card>\r\n        );\r\n    }\r\n}\r\nclass ManageCompany extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            data : [],\r\n            createForm : false,\r\n            updateForm : false,\r\n            companyId : ''\r\n        }\r\n        this.DisplayData = this.DisplayData.bind(this);\r\n        this.CreateCompanyForm = this.CreateCompanyForm.bind(this);\r\n        this.UpdateCompanyForm = this.UpdateCompanyForm.bind(this);\r\n    }\r\n\r\n    DisplayData(){\r\n        var CompanyCardList = [];\r\n        var data = this.state.data;\r\n        for(var i = 0; i < data.length; i++) {\r\n            var companyBanner = <CompanyCard key={i}\r\n                                             companyId={data[i].id}\r\n                                             companyName={data[i].companyName}\r\n                                             ceo={data[i].ceo}\r\n                                             turnover={data[i].turnover}\r\n                                             BOD={data[i].boardOfDirectors}\r\n                                             exchanges={data[i].listedInExchanges}\r\n                                             sector={data[i].sector}\r\n                                             brief={data[i].brief}\r\n                                             exchangeToCode={data[i].exchangeToCode}\r\n                                             UpdateCompanyForm={this.UpdateCompanyForm}\r\n                                             />\r\n            CompanyCardList.push(companyBanner);\r\n        }\r\n        return CompanyCardList;\r\n    }\r\n\r\n    CreateCompanyForm(){\r\n        this.setState({createForm : true,updateForm : false});\r\n    }\r\n\r\n    UpdateCompanyForm(event,companyId){\r\n        this.setState({createForm : false,updateForm : true,companyId : companyId});\r\n    }\r\n\r\n    componentDidMount(){\r\n        console.log(\"token\" + this.props.getAuthToken());\r\n        var requestOptions = {\r\n            method : 'GET',\r\n            headers : {\"Authorization\" : \"Bearer \" + this.props.getAuthToken() }\r\n        }\r\n        fetch(\"http://localhost:8082/company/\",requestOptions)\r\n        .then(response =>  response.json())\r\n        .then(data => {\r\n            this.setState({data : data});\r\n        })\r\n    }\r\n\r\n    render(){\r\n\r\n        let form;\r\n        if(this.state.createForm === true){\r\n            form = <CreateCompanyForm {...this.props}  history={this.props.history}/>;\r\n        }\r\n        else{\r\n            if(this.state.updateForm === true){\r\n                form = <EditCompanyForm {...this.props}  history={this.props.history} companyId = {this.state.companyId}/>;\r\n            }\r\n            else{\r\n                form = <Button onClick={this.CreateCompanyForm} id=\"add-new-company\" variant=\"primary\">Add New Company</Button>;\r\n            }\r\n        }\r\n\r\n        return(\r\n            <React.Fragment>\r\n                <NavWithDropDown />\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <Row md=\"2\">\r\n                <Col>\r\n                <div id=\"ipo-company\">\r\n                    <Card id=\"main-card-company\">\r\n                        <Card.Header id=\"card-header-company\">Listed Companies</Card.Header>\r\n                        <Card.Body id=\"card-body-company\">\r\n                            <Col>\r\n                            <Row md=\"1\">\r\n                                {this.DisplayData()}\r\n                            </Row>\r\n                            </Col>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n                </Col>\r\n\r\n                <Col>\r\n                <div id=\"form-company\">\r\n                    <Card id=\"form-card-company\">\r\n                    <Card.Header>{this.state.createForm === true ? 'Create New IPO' : ''}</Card.Header>\r\n                        <Card.Body id=\"form-body-company\">\r\n                            <Row md=\"1\">   \r\n                            {form}\r\n                            </Row>\r\n                            \r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n                </Col>\r\n                </Row>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ManageCompany;"]},"metadata":{},"sourceType":"module"}