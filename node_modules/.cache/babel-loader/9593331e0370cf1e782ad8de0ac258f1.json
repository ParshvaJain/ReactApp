{"ast":null,"code":"var _jsxFileName = \"D:\\\\Final-Backup\\\\stock-chart\\\\src\\\\Components\\\\UpdateProfile\\\\UpdateProfile.js\";\nimport React, { Component } from 'react';\nimport NavWithDropDown from '../NavBar';\nimport UserNavBar from '../UserNavBar';\nimport Form from 'react-bootstrap/Form';\nimport './UpdateProfile.css';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Card from 'react-bootstrap/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UpdationForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: '',\n      color: '',\n      name: '',\n      password: '',\n      phoneNumber: ''\n    };\n    this.updateProfile = this.updateProfile.bind(this);\n    this.sendRequest = this.sendRequest.bind(this);\n  }\n\n  componentDidMount() {\n    var requestOptions = {\n      method: 'GET',\n      headers: {\n        \"Authorization\": \"Bearer \" + this.props.getAuthToken(),\n        'Access-Control-Allow-Origin': '*'\n      }\n    };\n    fetch(\"https://authentication--service.herokuapp.com/authentication/update/getDetails/\" + this.props.getUserId(), requestOptions).then(response => response.json()).then(data => {\n      this.setState({\n        name: data.username,\n        password: '',\n        phoneNumber: data.phoneNumber\n      });\n    });\n  }\n\n  updateProfile(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var name = document.getElementById(\"formName\").value;\n    var password = document.getElementById(\"formPassword\").value;\n    var phoneNumber = document.getElementById(\"formNumber\").value;\n    this.sendRequest(name, password, phoneNumber);\n  }\n\n  sendRequest(name, password, phoneNumber) {\n    var jsonBody = {\n      \"username\": name,\n      \"password\": password,\n      \"phoneNumber\": phoneNumber,\n      \"confirmed\": true,\n      \"userType\": this.props.type\n    };\n    var requestOptions = {\n      method: 'POST',\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(jsonBody),\n      referrerPolicy: \"no-referrer\"\n    };\n    this.setState(() => {\n      fetch('https://authentication--service.herokuapp.com/authentication/update/' + this.props.getUserId(), requestOptions).then(response => {\n        if (response.status === 200) {\n          this.setState({\n            message: \"Profile Updated\",\n            color: \"green\"\n          });\n          return response.json();\n        } else {\n          this.setState({\n            message: \"Error updating profile\",\n            color: \"red\"\n          });\n        }\n\n        return null;\n      }).then(data => {\n        if (data != null) {\n          setTimeout(() => {\n            this.props.history.push(\"/\" + this.props.type + \"Home\");\n          }, 2000);\n        }\n      });\n    });\n  }\n\n  render() {\n    var messagestyle = {\n      fontSize: '16px',\n      color: this.state.color\n    };\n    return /*#__PURE__*/_jsxDEV(Container, {\n      id: \"main-box\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          id: \"update-profile-header\",\n          children: \"Update Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          id: \"form-update\",\n          onSubmit: this.updateProfile,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"User Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              onChange: e => this.setState({\n                name: e.target.value\n              }),\n              value: this.state.name,\n              placeholder: \"Enter User name\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formPassword\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              onChange: e => this.setState({\n                password: e.target.value\n              }),\n              value: this.state.password,\n              placeholder: \"Enter Password\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formNumber\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Contact Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              onChange: e => this.setState({\n                phoneNumber: e.target.value\n              }),\n              value: this.state.phoneNumber,\n              placeholder: \"Enter Number\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                type: \"submit\",\n                children: \"Update Profil\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                style: messagestyle,\n                children: this.state.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass UpdateProfile extends Component {\n  constructor(props) {\n    super(props);\n    var pathArray = this.props.location.pathname.split('/');\n    this.state = {\n      type: pathArray[pathArray.length - 1]\n    };\n  }\n\n  render() {\n    console.log(this.props.getAuthToken);\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [this.state.type === 'admin' ? /*#__PURE__*/_jsxDEV(NavWithDropDown, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 48\n      }, this) : /*#__PURE__*/_jsxDEV(UserNavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 70\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(UpdationForm, {\n        type: this.state.type,\n        history: this.props.history,\n        getAuthToken: this.props.getAuthToken,\n        getUserId: this.props.getUserId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default UpdateProfile;","map":{"version":3,"sources":["D:/Final-Backup/stock-chart/src/Components/UpdateProfile/UpdateProfile.js"],"names":["React","Component","NavWithDropDown","UserNavBar","Form","Row","Col","Button","Container","Card","UpdationForm","constructor","props","state","message","color","name","password","phoneNumber","updateProfile","bind","sendRequest","componentDidMount","requestOptions","method","headers","getAuthToken","fetch","getUserId","then","response","json","data","setState","username","event","preventDefault","stopPropagation","document","getElementById","value","jsonBody","type","mode","body","JSON","stringify","referrerPolicy","status","setTimeout","history","push","render","messagestyle","fontSize","e","target","UpdateProfile","pathArray","location","pathname","split","length","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport NavWithDropDown from '../NavBar';\r\nimport UserNavBar from '../UserNavBar';\r\nimport Form from 'react-bootstrap/Form';\r\nimport './UpdateProfile.css';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nclass UpdationForm extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            message : '',\r\n            color : '',\r\n            name : '',\r\n            password : '',\r\n            phoneNumber : ''\r\n        }\r\n        this.updateProfile = this.updateProfile.bind(this);\r\n        this.sendRequest = this.sendRequest.bind(this);\r\n    }\r\n    componentDidMount(){\r\n        var requestOptions = {\r\n            method : 'GET',\r\n            headers : {\"Authorization\" : \"Bearer \" + this.props.getAuthToken() , 'Access-Control-Allow-Origin': '*'}\r\n        }\r\n        \r\n        \r\n        fetch(\"https://authentication--service.herokuapp.com/authentication/update/getDetails/\"+this.props.getUserId(),requestOptions)\r\n        .then(response =>  response.json())\r\n        .then(data => {\r\n            this.setState({\r\n                name : data.username,\r\n                password : '',\r\n                phoneNumber : data.phoneNumber\r\n            });\r\n        })\r\n    }\r\n\r\n    updateProfile(event) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        var name = document.getElementById(\"formName\").value;\r\n        var password = document.getElementById(\"formPassword\").value;\r\n        var phoneNumber = document.getElementById(\"formNumber\").value;\r\n        this.sendRequest(name,password,phoneNumber);\r\n    }\r\n\r\n    sendRequest(name,password,phoneNumber){\r\n\r\n        var jsonBody = {\r\n            \"username\":name,\r\n            \"password\": password,\r\n            \"phoneNumber\":phoneNumber,\r\n            \"confirmed\":true,\r\n            \"userType\":this.props.type,\r\n\r\n        }\r\n\r\n        var requestOptions = {\r\n            method : 'POST',\r\n            mode : 'cors',\r\n            headers: {'Content-Type':'application/json'},\r\n            body : JSON.stringify(jsonBody),\r\n            referrerPolicy:\"no-referrer\",\r\n        }\r\n\r\n        this.setState(() => {\r\n            fetch('https://authentication--service.herokuapp.com/authentication/update/'+this.props.getUserId(),requestOptions)\r\n            .then(response => {\r\n                if(response.status  === 200) {\r\n                    this.setState({\r\n                        message : \"Profile Updated\",\r\n                        color : \"green\"\r\n                    })\r\n                    return response.json();\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        message:\"Error updating profile\",\r\n                        color:\"red\"\r\n                    })\r\n                }\r\n                return null;\r\n            }).then(data => {\r\n                if(data != null){\r\n                    setTimeout(() => {\r\n                        this.props.history.push(\"/\" +this.props.type +\"Home\");\r\n                    },2000);     \r\n                }\r\n            })\r\n        })      \r\n    }\r\n\r\n    render(){\r\n        \r\n        var messagestyle = {\r\n            fontSize : '16px',\r\n            color : this.state.color\r\n        }\r\n\r\n        return(\r\n            <Container id=\"main-box\">\r\n            <Card>\r\n                <Card.Header id=\"update-profile-header\">Update Profile</Card.Header>\r\n            \r\n            <Form id=\"form-update\"onSubmit={this.updateProfile}>\r\n                        <Form.Group controlId=\"formName\">\r\n                        <Form.Label>User Name</Form.Label>\r\n                            <Form.Control type=\"text\"  onChange={e => this.setState({name : e.target.value})} value={this.state.name}placeholder=\"Enter User name\"  required/>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formPassword\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" onChange={e => this.setState({password : e.target.value})} value={this.state.password}placeholder=\"Enter Password\" required />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formNumber\">\r\n                            <Form.Label>Contact Number</Form.Label>\r\n                            <Form.Control type=\"text\" onChange={e => this.setState({phoneNumber : e.target.value})}  value={this.state.phoneNumber}placeholder=\"Enter Number\" required />\r\n                        </Form.Group>\r\n\r\n\r\n                        <br></br>\r\n                        <br></br>\r\n\r\n                        <Row>\r\n                            <Col>\r\n                                <Button variant=\"primary\" type=\"submit\">\r\n                                    Update Profil\r\n                                </Button>\r\n                            </Col>\r\n                            \r\n                            <Col>\r\n                                <span style={messagestyle}>{this.state.message}</span>\r\n                            </Col>\r\n                        </Row>\r\n                     \r\n                    </Form>\r\n                    </Card>\r\n                    </Container>\r\n        );\r\n    }\r\n}\r\nclass UpdateProfile extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        var pathArray = this.props.location.pathname.split('/');\r\n        this.state = {\r\n            type : pathArray[pathArray.length - 1]\r\n        }\r\n    }\r\n\r\n    render(){\r\n        console.log(this.props.getAuthToken);\r\n        return(\r\n            <React.Fragment>\r\n                {this.state.type === 'admin' ? <NavWithDropDown /> : <UserNavBar /> }\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <UpdationForm type={this.state.type} history = {this.props.history} getAuthToken={this.props.getAuthToken} getUserId={this.props.getUserId} />\r\n            </React.Fragment>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default UpdateProfile;"]},"metadata":{},"sourceType":"module"}