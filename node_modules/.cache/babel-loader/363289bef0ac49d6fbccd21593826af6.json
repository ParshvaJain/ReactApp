{"ast":null,"code":"var _jsxFileName = \"D:\\\\Final-Backup\\\\stock-chart\\\\src\\\\Components\\\\ManageCompany\\\\ManageCompany.js\";\nimport React, { Component } from 'react';\nimport './ManageCompany.css';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport NavWithDropDown from '../NavBar';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CreateCompanyForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: '',\n      color: ''\n    };\n    this.createCompany = this.createCompany.bind(this);\n    this.sendRequest = this.sendRequest.bind(this);\n  }\n\n  createCompany(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var name = document.getElementById(\"formCompanyName\").value;\n    var turnover = document.getElementById(\"formTurnover\").value;\n    var ceo = document.getElementById(\"formCeo\").value;\n    var bod = document.getElementById(\"formBoardOfDirectors\").value;\n    var exchanges = document.getElementById(\"formExchanges\").value;\n    var sector = document.getElementById(\"formSector\").value;\n    var brief = document.getElementById(\"formBrief\").value;\n    var exchangeToCode = document.getElementById(\"formETC\").value;\n    let myMap = new Map();\n    var textArray = exchangeToCode.split(\",\");\n    let len = textArray.length;\n\n    for (var i = 0; i < len; i++) {\n      var exchange = textArray[i].split(\":\")[0];\n      var code = textArray[i].split(\":\")[1];\n      myMap.set(exchange, code);\n    }\n\n    exchanges = exchanges.split(\",\");\n    bod = bod.split(\",\");\n    this.sendRequest(name, turnover, ceo, bod, exchanges, sector, brief, myMap);\n  }\n\n  sendRequest(name, turnover, ceo, bod, exchanges, sector, brief, myMap) {\n    var ETCObj = {};\n    var inArray = [...myMap.entries()];\n    var length = inArray.length;\n\n    for (var i = 0; i < length; i++) {\n      ETCObj[inArray[i][0]] = inArray[i][1];\n    }\n\n    var jsonBody = {\n      \"companyName\": name,\n      \"turnover\": turnover,\n      \"ceo\": ceo,\n      \"boardOfDirectors\": bod,\n      \"listedInExchanges\": exchanges,\n      \"sector\": sector,\n      \"brief\": brief,\n      \"exchangeToCode\": ETCObj\n    };\n    var requestOptions = {\n      method: 'POST',\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/json',\n        \"Authorization\": \"Bearer \" + this.props.getAuthToken()\n      },\n      body: JSON.stringify(jsonBody),\n      referrerPolicy: \"no-referrer\"\n    };\n    this.setState(() => {\n      fetch('https://company--service.herokuapp.com/company/create', requestOptions).then(response => {\n        if (response.status === 200) {\n          this.setState({\n            message: \"New Company created \",\n            color: \"green\"\n          });\n          return response.json();\n        } else {\n          this.setState({\n            message: \"Error creating Company!\",\n            color: \"red\"\n          });\n        }\n\n        return null;\n      }).then(data => {\n        if (data != null) {\n          setTimeout(() => {\n            this.props.history.push(\"/adminHome\");\n          }, 2000);\n        }\n      });\n    });\n  }\n\n  render() {\n    var messagestyle = {\n      fontSize: '16px',\n      color: this.state.color\n    };\n    return /*#__PURE__*/_jsxDEV(Form, {\n      id: \"create-company-form\",\n      onSubmit: this.createCompany,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formCompanyName\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Company Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Company name\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formTurnover\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Turnover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter Turnover in Crores\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formCeo\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"CEO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter CEO\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formBoardOfDirectors\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Board Of Directors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter directors in comma seperated\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formExchanges\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Exchanges\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter exchanges in comma seperated\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formSector\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Sector\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter Sector\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formBrief\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Brief\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter Brief\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formETC\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Exchange To Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter Code for each exchange\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            id: \"create-company-button\",\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Create Company\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: messagestyle,\n            children: this.state.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass EditCompanyForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      turnover: '',\n      ceo: '',\n      bod: '',\n      exchanges: '',\n      sector: '',\n      brief: '',\n      exchangeToCode: {}\n    };\n    this.updateForm = this.updateForm.bind(this);\n  }\n\n  updateForm(e) {\n    e.preventDefault();\n    var jsonBody = {\n      \"companyName\": this.state.name,\n      \"turnover\": this.state.turnover,\n      \"ceo\": this.state.ceo,\n      \"boardOfDirectors\": this.state.bod.split(\",\"),\n      \"listedInExchanges\": this.state.exchanges.split(\",\"),\n      \"sector\": this.state.sector,\n      \"brief\": this.state.brief,\n      \"exchangeToCode\": this.state.exchangeToCode\n    };\n    var requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        \"Authorization\": \"Bearer \" + this.props.getAuthToken()\n      },\n      body: JSON.stringify(jsonBody),\n      referrerPolicy: \"no-referrer\"\n    };\n    fetch(`https://company--service.herokuapp.com/company/update/${this.props.companyId}`, requestOptions).then(response => {\n      if (response.status === 200) {\n        console.log(\"in 200\");\n        return response.json();\n      } else {\n        console.log(\"in !200\");\n      }\n\n      return null;\n    }).then(data => {\n      console.log(data);\n      setTimeout(() => {\n        this.props.history.push(\"/adminHome\");\n      }, 3000);\n    });\n  }\n\n  componentDidMount() {\n    var requestOptions = {\n      method: 'GET',\n      headers: {\n        \"Authorization\": \"Bearer \" + this.props.getAuthToken()\n      }\n    };\n    console.log(this.props.ipoId);\n    fetch(`https://company--service.herokuapp.com/company/${this.props.companyId}`, requestOptions).then(response => {\n      if (response.status === 200) {\n        return response.json();\n      }\n\n      return null;\n    }).then(data => {\n      console.log(data);\n\n      if (data != null) {\n        this.setState({\n          name: data.companyName,\n          turnover: data.turnover,\n          ceo: data.ceo,\n          bod: data.boardOfDirectors.toString(),\n          exchanges: data.listedInExchanges.toString(),\n          sector: data.sector,\n          brief: data.brief,\n          exchangeToCode: data.exchangeToCode\n        });\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Form, {\n      className: \"justify-content-center\",\n      onSubmit: this.getData,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formCompanyName\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Company Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          onChange: e => this.setState({\n            name: e.target.value\n          }),\n          value: this.state.name,\n          type: \"text\",\n          placeholder: \"Company name\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formTurnover\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Turnover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          onChange: e => this.setState({\n            turnover: e.target.value\n          }),\n          value: this.state.turnover,\n          placeholder: \"Enter Turnover in Crores\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formCeo\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"CEO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          onChange: e => this.setState({\n            ceo: e.target.value\n          }),\n          value: this.state.ceo,\n          type: \"text\",\n          placeholder: \"Enter CEO\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formBoardOfDirectors\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Board Of Directors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          onChange: e => this.setState({\n            bod: e.target.value\n          }),\n          value: this.state.bod,\n          type: \"text\",\n          placeholder: \"Enter directors in comma seperated\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formExchanges\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Exchanges\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          onChange: e => this.setState({\n            exchanges: e.target.value\n          }),\n          value: this.state.exchanges,\n          placeholder: \"Enter exchanges in comma seperated\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formSector\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Sector\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          onChange: e => this.setState({\n            sector: e.target.value\n          }),\n          value: this.state.sector,\n          type: \"text\",\n          placeholder: \"Enter Sector\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formBrief\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Brief\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          onChange: e => this.setState({\n            brief: e.target.value\n          }),\n          value: this.state.brief,\n          type: \"text\",\n          placeholder: \"Enter Brief\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formETC\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Exchange To Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          onChange: e => this.setState({\n            exchangeToCode: e.target.value\n          }),\n          value: JSON.stringify(this.state.exchangeToCode),\n          type: \"text\",\n          placeholder: \"Enter Code for each exchange\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        onClick: this.updateForm,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass CompanyCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      updateForm: false\n    };\n    this.deleteCompany = this.deleteCompany.bind(this);\n  }\n\n  deleteCompany() {\n    var requestOptions = {\n      method: 'GET',\n      headers: {\n        \"Authorization\": \"Bearer \" + this.props.getAuthToken()\n      }\n    };\n    fetch(`http://localhost:8082/company/delete/${this.props.companyName}`, requestOptions).then(res => {\n      if (res.status == 200) return res.json();\n    }).then(data => {\n      if (data != null) {\n        console.log(\"done\");\n      }\n    });\n  }\n\n  render() {\n    var exchanges = this.props.exchanges;\n    var companyExchange = exchanges.toString();\n    return /*#__PURE__*/_jsxDEV(Card, {\n      bg: \"white\",\n      id: \"each-card-company\",\n      text: \"black\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: this.props.companyName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              md: \"3\",\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                children: \"Sector\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                children: \"Listed in Exchanges\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                children: \"TurnOver\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              md: \"3\",\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                children: this.props.sector\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                children: companyExchange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                children: this.props.turnover\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          id: \"edit-details-company\",\n          onClick: event => this.props.UpdateCompanyForm(event, this.props.companyId),\n          variant: \"primary\",\n          children: \"Edit Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          id: \"delete-details-company\",\n          id: \"delete-company-button\",\n          onClick: this.deleteCompany,\n          variant: \"primary\",\n          children: \"Delete Company\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass ManageCompany extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      createForm: false,\n      updateForm: false,\n      companyId: ''\n    };\n    this.DisplayData = this.DisplayData.bind(this);\n    this.CreateCompanyForm = this.CreateCompanyForm.bind(this);\n    this.UpdateCompanyForm = this.UpdateCompanyForm.bind(this);\n  }\n\n  DisplayData() {\n    console.log(this.props.getAuthToken());\n    console.log(this.props.getUserName());\n    console.log(this.props.getUserId());\n    var CompanyCardList = [];\n    var data = this.state.data;\n\n    for (var i = 0; i < data.length; i++) {\n      var companyBanner = /*#__PURE__*/_jsxDEV(CompanyCard, {\n        companyId: data[i].id,\n        companyName: data[i].companyName,\n        ceo: data[i].ceo,\n        turnover: data[i].turnover,\n        BOD: data[i].boardOfDirectors,\n        exchanges: data[i].listedInExchanges,\n        sector: data[i].sector,\n        brief: data[i].brief,\n        exchangeToCode: data[i].exchangeToCode,\n        UpdateCompanyForm: this.UpdateCompanyForm\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 33\n      }, this);\n\n      CompanyCardList.push(companyBanner);\n    }\n\n    return CompanyCardList;\n  }\n\n  CreateCompanyForm() {\n    this.setState({\n      createForm: true,\n      updateForm: false\n    });\n  }\n\n  UpdateCompanyForm(event, companyId) {\n    this.setState({\n      createForm: false,\n      updateForm: true,\n      companyId: companyId\n    });\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n    console.log(this.props.getAuthToken());\n    console.log(this.props.getUserName());\n    console.log(this.props.getUserId());\n    var requestOptions = {\n      method: 'GET',\n      headers: {\n        \"Authorization\": \"Bearer \" + this.props.getAuthToken()\n      }\n    };\n    fetch(\"https://company--service.herokuapp.com/company/\", requestOptions).then(response => response.json()).then(data => {\n      this.setState({\n        data: data\n      });\n    });\n  }\n\n  render() {\n    let form;\n\n    if (this.state.createForm === true) {\n      form = /*#__PURE__*/_jsxDEV(CreateCompanyForm, { ...this.props,\n        history: this.props.history\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 20\n      }, this);\n    } else {\n      if (this.state.updateForm === true) {\n        form = /*#__PURE__*/_jsxDEV(EditCompanyForm, { ...this.props,\n          history: this.props.history,\n          companyId: this.state.companyId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 24\n        }, this);\n      } else {\n        form = /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.CreateCompanyForm,\n          id: \"add-new-company\",\n          variant: \"primary\",\n          children: \"Add New Company\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 24\n        }, this);\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NavWithDropDown, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        md: \"2\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"ipo-company\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              id: \"main-card-company\",\n              children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                id: \"card-header-company\",\n                children: \"Listed Companies\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 465,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                id: \"card-body-company\",\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(Row, {\n                    md: \"1\",\n                    children: this.DisplayData()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 468,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 467,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 466,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"form-company\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              id: \"form-card-company\",\n              children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                children: this.state.createForm === true ? /*#__PURE__*/_jsxDEV(\"span\", {\n                  id: \"company-new-header\",\n                  children: \"Create New Company \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 480,\n                  columnNumber: 80\n                }, this) : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 480,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                id: \"form-body-company\",\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  md: \"1\",\n                  children: form\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 482,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 481,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ManageCompany;","map":{"version":3,"sources":["D:/Final-Backup/stock-chart/src/Components/ManageCompany/ManageCompany.js"],"names":["React","Component","Container","Form","Button","NavWithDropDown","Card","Row","Col","CreateCompanyForm","constructor","props","state","message","color","createCompany","bind","sendRequest","event","preventDefault","stopPropagation","name","document","getElementById","value","turnover","ceo","bod","exchanges","sector","brief","exchangeToCode","myMap","Map","textArray","split","len","length","i","exchange","code","set","ETCObj","inArray","entries","jsonBody","requestOptions","method","mode","headers","getAuthToken","body","JSON","stringify","referrerPolicy","setState","fetch","then","response","status","json","data","setTimeout","history","push","render","messagestyle","fontSize","EditCompanyForm","updateForm","e","companyId","console","log","componentDidMount","ipoId","companyName","boardOfDirectors","toString","listedInExchanges","getData","target","CompanyCard","deleteCompany","res","companyExchange","UpdateCompanyForm","ManageCompany","createForm","DisplayData","getUserName","getUserId","CompanyCardList","companyBanner","id","form"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,qBAAP;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,eAAP,MAA4B,WAA5B;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;;;AAEA,MAAMC,iBAAN,SAAgCR,SAAhC,CAA0C;AACtCS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,EADA;AAETC,MAAAA,KAAK,EAAE;AAFE,KAAb;AAIA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AACH;;AAEDD,EAAAA,aAAa,CAACG,KAAD,EAAQ;AACjBA,IAAAA,KAAK,CAACC,cAAN;AACAD,IAAAA,KAAK,CAACE,eAAN;AAEA,QAAIC,IAAI,GAAGC,QAAQ,CAACC,cAAT,CAAwB,iBAAxB,EAA2CC,KAAtD;AACA,QAAIC,QAAQ,GAAGH,QAAQ,CAACC,cAAT,CAAwB,cAAxB,EAAwCC,KAAvD;AACA,QAAIE,GAAG,GAAGJ,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCC,KAA7C;AACA,QAAIG,GAAG,GAAGL,QAAQ,CAACC,cAAT,CAAwB,sBAAxB,EAAgDC,KAA1D;AACA,QAAII,SAAS,GAAGN,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCC,KAAzD;AACA,QAAIK,MAAM,GAAGP,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,KAAnD;AACA,QAAIM,KAAK,GAAGR,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCC,KAAjD;AACA,QAAIO,cAAc,GAAGT,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCC,KAAxD;AAEA,QAAIQ,KAAK,GAAG,IAAIC,GAAJ,EAAZ;AACA,QAAIC,SAAS,GAAGH,cAAc,CAACI,KAAf,CAAqB,GAArB,CAAhB;AACA,QAAIC,GAAG,GAAGF,SAAS,CAACG,MAApB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAApB,EAAyBE,CAAC,EAA1B,EAA8B;AAC1B,UAAIC,QAAQ,GAAGL,SAAS,CAACI,CAAD,CAAT,CAAaH,KAAb,CAAmB,GAAnB,EAAwB,CAAxB,CAAf;AACA,UAAIK,IAAI,GAAGN,SAAS,CAACI,CAAD,CAAT,CAAaH,KAAb,CAAmB,GAAnB,EAAwB,CAAxB,CAAX;AACAH,MAAAA,KAAK,CAACS,GAAN,CAAUF,QAAV,EAAoBC,IAApB;AACH;;AAEDZ,IAAAA,SAAS,GAAGA,SAAS,CAACO,KAAV,CAAgB,GAAhB,CAAZ;AACAR,IAAAA,GAAG,GAAGA,GAAG,CAACQ,KAAJ,CAAU,GAAV,CAAN;AACA,SAAKlB,WAAL,CAAiBI,IAAjB,EAAuBI,QAAvB,EAAiCC,GAAjC,EAAsCC,GAAtC,EAA2CC,SAA3C,EAAsDC,MAAtD,EAA8DC,KAA9D,EAAqEE,KAArE;AACH;;AAEDf,EAAAA,WAAW,CAACI,IAAD,EAAOI,QAAP,EAAiBC,GAAjB,EAAsBC,GAAtB,EAA2BC,SAA3B,EAAsCC,MAAtC,EAA8CC,KAA9C,EAAqDE,KAArD,EAA4D;AAEnE,QAAIU,MAAM,GAAG,EAAb;AACA,QAAIC,OAAO,GAAG,CAAC,GAAGX,KAAK,CAACY,OAAN,EAAJ,CAAd;AACA,QAAIP,MAAM,GAAGM,OAAO,CAACN,MAArB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,MAApB,EAA4BC,CAAC,EAA7B,EAAiC;AAC7BI,MAAAA,MAAM,CAACC,OAAO,CAACL,CAAD,CAAP,CAAW,CAAX,CAAD,CAAN,GAAwBK,OAAO,CAACL,CAAD,CAAP,CAAW,CAAX,CAAxB;AACH;;AAED,QAAIO,QAAQ,GAAG;AACX,qBAAexB,IADJ;AAEX,kBAAYI,QAFD;AAGX,aAAOC,GAHI;AAIX,0BAAoBC,GAJT;AAKX,2BAAqBC,SALV;AAMX,gBAAUC,MANC;AAOX,eAASC,KAPE;AAQX,wBAAkBY;AARP,KAAf;AAWA,QAAII,cAAc,GAAG;AACjBC,MAAAA,MAAM,EAAE,MADS;AAEjBC,MAAAA,IAAI,EAAE,MAFW;AAGjBC,MAAAA,OAAO,EAAE;AAAE,wBAAgB,kBAAlB;AAAsC,yBAAiB,YAAY,KAAKtC,KAAL,CAAWuC,YAAX;AAAnE,OAHQ;AAIjBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,QAAf,CAJW;AAKjBS,MAAAA,cAAc,EAAE;AALC,KAArB;AAOA,SAAKC,QAAL,CAAc,MAAM;AAChBC,MAAAA,KAAK,CAAC,uDAAD,EAA0DV,cAA1D,CAAL,CACKW,IADL,CACUC,QAAQ,IAAI;AACd,YAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AACzB,eAAKJ,QAAL,CAAc;AACV1C,YAAAA,OAAO,EAAE,sBADC;AAEVC,YAAAA,KAAK,EAAE;AAFG,WAAd;AAIA,iBAAO4C,QAAQ,CAACE,IAAT,EAAP;AACH,SAND,MAOK;AACD,eAAKL,QAAL,CAAc;AACV1C,YAAAA,OAAO,EAAE,yBADC;AAEVC,YAAAA,KAAK,EAAE;AAFG,WAAd;AAIH;;AACD,eAAO,IAAP;AACH,OAhBL,EAgBO2C,IAhBP,CAgBYI,IAAI,IAAI;AACZ,YAAIA,IAAI,IAAI,IAAZ,EAAkB;AACdC,UAAAA,UAAU,CAAC,MAAM;AACb,iBAAKnD,KAAL,CAAWoD,OAAX,CAAmBC,IAAnB,CAAwB,YAAxB;AACH,WAFS,EAEP,IAFO,CAAV;AAGH;AACJ,OAtBL;AAuBH,KAxBD;AAyBH;;AAEDC,EAAAA,MAAM,GAAG;AAEL,QAAIC,YAAY,GAAG;AACfC,MAAAA,QAAQ,EAAE,MADK;AAEfrD,MAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE;AAFH,KAAnB;AAKA,wBACI,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,qBAAT;AAA+B,MAAA,QAAQ,EAAE,KAAKC,aAA9C;AAAA,8BACI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,iBAAtB;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,UAAA,IAAI,EAAC,MAAnB;AAA0B,UAAA,WAAW,EAAC,cAAtC;AAAqD,UAAA,QAAQ;AAA7D;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,cAAtB;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,UAAA,IAAI,EAAC,MAAnB;AAA0B,UAAA,WAAW,EAAC,0BAAtC;AAAiE,UAAA,QAAQ;AAAzE;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAUI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,SAAtB;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,UAAA,IAAI,EAAC,MAAnB;AAA0B,UAAA,WAAW,EAAC,WAAtC;AAAkD,UAAA,QAAQ;AAA1D;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ,eAeI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,sBAAtB;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,UAAA,IAAI,EAAC,MAAnB;AAA0B,UAAA,WAAW,EAAC,oCAAtC;AAA2E,UAAA,QAAQ;AAAnF;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAfJ,eAoBI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,eAAtB;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,UAAA,IAAI,EAAC,MAAnB;AAA0B,UAAA,WAAW,EAAC,oCAAtC;AAA2E,UAAA,QAAQ;AAAnF;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cApBJ,eAyBI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,YAAtB;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,UAAA,IAAI,EAAC,MAAnB;AAA0B,UAAA,WAAW,EAAC,cAAtC;AAAqD,UAAA,QAAQ;AAA7D;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBJ,eA8BI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,WAAtB;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,UAAA,IAAI,EAAC,MAAnB;AAA0B,UAAA,WAAW,EAAC,aAAtC;AAAoD,UAAA,QAAQ;AAA5D;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cA9BJ,eAmCI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,SAAtB;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,UAAA,IAAI,EAAC,MAAnB;AAA0B,UAAA,WAAW,EAAC,8BAAtC;AAAqE,UAAA,QAAQ;AAA7E;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAnCJ,eAwCI;AAAA;AAAA;AAAA;AAAA,cAxCJ,eAyCI;AAAA;AAAA;AAAA;AAAA,cAzCJ,eA0CI,QAAC,GAAD;AAAA,gCACI,QAAC,GAAD;AAAA,iCACI,QAAC,MAAD;AAAQ,YAAA,EAAE,EAAC,uBAAX;AAAmC,YAAA,OAAO,EAAC,SAA3C;AAAqD,YAAA,IAAI,EAAC,QAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOI,QAAC,GAAD;AAAA,iCACI;AAAM,YAAA,KAAK,EAAEmD,YAAb;AAAA,sBAA4B,KAAKtD,KAAL,CAAWC;AAAvC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,cA1CJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAyDH;;AA5JqC;;AA+J1C,MAAMuD,eAAN,SAA8BnE,SAA9B,CAAwC;AACpCS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTS,MAAAA,IAAI,EAAE,EADG;AAETI,MAAAA,QAAQ,EAAE,EAFD;AAGTC,MAAAA,GAAG,EAAE,EAHI;AAITC,MAAAA,GAAG,EAAE,EAJI;AAKTC,MAAAA,SAAS,EAAE,EALF;AAMTC,MAAAA,MAAM,EAAE,EANC;AAOTC,MAAAA,KAAK,EAAE,EAPE;AAQTC,MAAAA,cAAc,EAAE;AARP,KAAb;AAUA,SAAKsC,UAAL,GAAkB,KAAKA,UAAL,CAAgBrD,IAAhB,CAAqB,IAArB,CAAlB;AACH;;AAEDqD,EAAAA,UAAU,CAACC,CAAD,EAAI;AACVA,IAAAA,CAAC,CAACnD,cAAF;AAEA,QAAI0B,QAAQ,GAAG;AACX,qBAAe,KAAKjC,KAAL,CAAWS,IADf;AAEX,kBAAY,KAAKT,KAAL,CAAWa,QAFZ;AAGX,aAAO,KAAKb,KAAL,CAAWc,GAHP;AAIX,0BAAoB,KAAKd,KAAL,CAAWe,GAAX,CAAeQ,KAAf,CAAqB,GAArB,CAJT;AAKX,2BAAqB,KAAKvB,KAAL,CAAWgB,SAAX,CAAqBO,KAArB,CAA2B,GAA3B,CALV;AAMX,gBAAU,KAAKvB,KAAL,CAAWiB,MANV;AAOX,eAAS,KAAKjB,KAAL,CAAWkB,KAPT;AAQX,wBAAkB,KAAKlB,KAAL,CAAWmB;AARlB,KAAf;AAUA,QAAIe,cAAc,GAAG;AACjBC,MAAAA,MAAM,EAAE,MADS;AAEjBE,MAAAA,OAAO,EAAE;AAAE,wBAAgB,kBAAlB;AAAsC,yBAAiB,YAAY,KAAKtC,KAAL,CAAWuC,YAAX;AAAnE,OAFQ;AAGjBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,QAAf,CAHW;AAIjBS,MAAAA,cAAc,EAAE;AAJC,KAArB;AAOAE,IAAAA,KAAK,CAAE,yDAAwD,KAAK7C,KAAL,CAAW4D,SAAU,EAA/E,EAAkFzB,cAAlF,CAAL,CACKW,IADL,CACUC,QAAQ,IAAI;AACd,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AACzBa,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,eAAOf,QAAQ,CAACE,IAAT,EAAP;AACH,OAHD,MAIK;AACDY,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH;;AACD,aAAO,IAAP;AACH,KAVL,EAUOhB,IAVP,CAUYI,IAAI,IAAI;AACZW,MAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAZ;AACAC,MAAAA,UAAU,CAAC,MAAM;AACb,aAAKnD,KAAL,CAAWoD,OAAX,CAAmBC,IAAnB,CAAwB,YAAxB;AACH,OAFS,EAEP,IAFO,CAAV;AAGH,KAfL;AAgBH;;AAGDU,EAAAA,iBAAiB,GAAG;AAChB,QAAI5B,cAAc,GAAG;AACjBC,MAAAA,MAAM,EAAE,KADS;AAEjBE,MAAAA,OAAO,EAAE;AAAE,yBAAiB,YAAY,KAAKtC,KAAL,CAAWuC,YAAX;AAA/B;AAFQ,KAArB;AAIAsB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAK9D,KAAL,CAAWgE,KAAvB;AACAnB,IAAAA,KAAK,CAAE,kDAAiD,KAAK7C,KAAL,CAAW4D,SAAU,EAAxE,EAA2EzB,cAA3E,CAAL,CACKW,IADL,CACUC,QAAQ,IAAI;AACd,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AACzB,eAAOD,QAAQ,CAACE,IAAT,EAAP;AACH;;AACD,aAAO,IAAP;AACH,KANL,EAMOH,IANP,CAMYI,IAAI,IAAI;AACZW,MAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAZ;;AACA,UAAIA,IAAI,IAAI,IAAZ,EAAkB;AACd,aAAKN,QAAL,CAAc;AACVlC,UAAAA,IAAI,EAAEwC,IAAI,CAACe,WADD;AAEVnD,UAAAA,QAAQ,EAAEoC,IAAI,CAACpC,QAFL;AAGVC,UAAAA,GAAG,EAAEmC,IAAI,CAACnC,GAHA;AAIVC,UAAAA,GAAG,EAAEkC,IAAI,CAACgB,gBAAL,CAAsBC,QAAtB,EAJK;AAKVlD,UAAAA,SAAS,EAAEiC,IAAI,CAACkB,iBAAL,CAAuBD,QAAvB,EALD;AAMVjD,UAAAA,MAAM,EAAEgC,IAAI,CAAChC,MANH;AAOVC,UAAAA,KAAK,EAAE+B,IAAI,CAAC/B,KAPF;AAQVC,UAAAA,cAAc,EAAE8B,IAAI,CAAC9B;AARX,SAAd;AAUH;AACJ,KApBL;AAqBH;;AAEDkC,EAAAA,MAAM,GAAG;AAEL,wBACI,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,wBAAhB;AAAyC,MAAA,QAAQ,EAAE,KAAKe,OAAxD;AAAA,8BACI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,iBAAtB;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,UAAA,QAAQ,EAAEV,CAAC,IAAI,KAAKf,QAAL,CAAc;AAAElC,YAAAA,IAAI,EAAEiD,CAAC,CAACW,MAAF,CAASzD;AAAjB,WAAd,CAA7B;AAAsE,UAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWS,IAAxF;AAA8F,UAAA,IAAI,EAAC,MAAnG;AAA0G,UAAA,WAAW,EAAC,cAAtH;AAAqI,UAAA,QAAQ;AAA7I;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,cAAtB;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,UAAA,IAAI,EAAC,MAAnB;AAA0B,UAAA,QAAQ,EAAEiD,CAAC,IAAI,KAAKf,QAAL,CAAc;AAAE9B,YAAAA,QAAQ,EAAE6C,CAAC,CAACW,MAAF,CAASzD;AAArB,WAAd,CAAzC;AAAsF,UAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWa,QAAxG;AAAkH,UAAA,WAAW,EAAC,0BAA9H;AAAyJ,UAAA,QAAQ;AAAjK;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAUI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,SAAtB;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,UAAA,QAAQ,EAAE6C,CAAC,IAAI,KAAKf,QAAL,CAAc;AAAE7B,YAAAA,GAAG,EAAE4C,CAAC,CAACW,MAAF,CAASzD;AAAhB,WAAd,CAA7B;AAAqE,UAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWc,GAAvF;AAA4F,UAAA,IAAI,EAAC,MAAjG;AAAwG,UAAA,WAAW,EAAC,WAApH;AAAgI,UAAA,QAAQ;AAAxI;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ,eAeI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,sBAAtB;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,UAAA,QAAQ,EAAE4C,CAAC,IAAI,KAAKf,QAAL,CAAc;AAAE5B,YAAAA,GAAG,EAAE2C,CAAC,CAACW,MAAF,CAASzD;AAAhB,WAAd,CAA7B;AAAqE,UAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWe,GAAvF;AAA4F,UAAA,IAAI,EAAC,MAAjG;AAAwG,UAAA,WAAW,EAAC,oCAApH;AAAyJ,UAAA,QAAQ;AAAjK;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAfJ,eAoBI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,eAAtB;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,UAAA,IAAI,EAAC,MAAnB;AAA0B,UAAA,QAAQ,EAAE2C,CAAC,IAAI,KAAKf,QAAL,CAAc;AAAE3B,YAAAA,SAAS,EAAE0C,CAAC,CAACW,MAAF,CAASzD;AAAtB,WAAd,CAAzC;AAAuF,UAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWgB,SAAzG;AAAoH,UAAA,WAAW,EAAC,oCAAhI;AAAqK,UAAA,QAAQ;AAA7K;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cApBJ,eAyBI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,YAAtB;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,UAAA,QAAQ,EAAE0C,CAAC,IAAI,KAAKf,QAAL,CAAc;AAAE1B,YAAAA,MAAM,EAAEyC,CAAC,CAACW,MAAF,CAASzD;AAAnB,WAAd,CAA7B;AAAwE,UAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWiB,MAA1F;AAAkG,UAAA,IAAI,EAAC,MAAvG;AAA8G,UAAA,WAAW,EAAC,cAA1H;AAAyI,UAAA,QAAQ;AAAjJ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBJ,eA8BI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,WAAtB;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,UAAA,QAAQ,EAAEyC,CAAC,IAAI,KAAKf,QAAL,CAAc;AAAEzB,YAAAA,KAAK,EAAEwC,CAAC,CAACW,MAAF,CAASzD;AAAlB,WAAd,CAA7B;AAAuE,UAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWkB,KAAzF;AAAgG,UAAA,IAAI,EAAC,MAArG;AAA4G,UAAA,WAAW,EAAC,aAAxH;AAAsI,UAAA,QAAQ;AAA9I;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cA9BJ,eAmCI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,SAAtB;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,UAAA,QAAQ,EAAEwC,CAAC,IAAI,KAAKf,QAAL,CAAc;AAAExB,YAAAA,cAAc,EAAEuC,CAAC,CAACW,MAAF,CAASzD;AAA3B,WAAd,CAA7B;AAAgF,UAAA,KAAK,EAAE4B,IAAI,CAACC,SAAL,CAAe,KAAKzC,KAAL,CAAWmB,cAA1B,CAAvF;AAAkI,UAAA,IAAI,EAAC,MAAvI;AAA8I,UAAA,WAAW,EAAC,8BAA1J;AAAyL,UAAA,QAAQ;AAAjM;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAnCJ,eAyCI;AAAA;AAAA;AAAA;AAAA,cAzCJ,eA0CI;AAAA;AAAA;AAAA;AAAA,cA1CJ,eA2CI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAA0B,QAAA,IAAI,EAAC,QAA/B;AAAwC,QAAA,OAAO,EAAE,KAAKsC,UAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA3CJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAiDH;;AAvImC;;AA0IxC,MAAMa,WAAN,SAA0BjF,SAA1B,CAAoC;AAEhCS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTyD,MAAAA,UAAU,EAAE;AADH,KAAb;AAGA,SAAKc,aAAL,GAAqB,KAAKA,aAAL,CAAmBnE,IAAnB,CAAwB,IAAxB,CAArB;AACH;;AAEDmE,EAAAA,aAAa,GAAG;AACZ,QAAIrC,cAAc,GAAG;AACjBC,MAAAA,MAAM,EAAE,KADS;AAEjBE,MAAAA,OAAO,EAAE;AAAE,yBAAiB,YAAY,KAAKtC,KAAL,CAAWuC,YAAX;AAA/B;AAFQ,KAArB;AAKAM,IAAAA,KAAK,CAAE,wCAAuC,KAAK7C,KAAL,CAAWiE,WAAY,EAAhE,EAAmE9B,cAAnE,CAAL,CACKW,IADL,CACU2B,GAAG,IAAI;AACT,UAAIA,GAAG,CAACzB,MAAJ,IAAc,GAAlB,EACI,OAAOyB,GAAG,CAACxB,IAAJ,EAAP;AACP,KAJL,EAKKH,IALL,CAKUI,IAAI,IAAI;AACV,UAAIA,IAAI,IAAI,IAAZ,EAAkB;AACdW,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACH;AACJ,KATL;AAUH;;AACDR,EAAAA,MAAM,GAAG;AACL,QAAIrC,SAAS,GAAG,KAAKjB,KAAL,CAAWiB,SAA3B;AACA,QAAIyD,eAAe,GAAGzD,SAAS,CAACkD,QAAV,EAAtB;AACA,wBACI,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,OAAT;AAAiB,MAAA,EAAE,EAAC,mBAApB;AAAwC,MAAA,IAAI,EAAC,OAA7C;AAAA,8BACI,QAAC,IAAD,CAAM,MAAN;AAAA,kBAAc,KAAKnE,KAAL,CAAWiE;AAAzB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,IAAD,CAAM,IAAN;AAAA,gCACI,QAAC,IAAD,CAAM,IAAN;AAAA,iCACI,QAAC,SAAD;AAAA,oCACI,QAAC,GAAD;AAAK,cAAA,EAAE,EAAC,GAAR;AAAA,sCACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAII,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ,eAOI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAYI;AAAA;AAAA;AAAA;AAAA,oBAZJ,eAaI,QAAC,GAAD;AAAK,cAAA,EAAE,EAAC,GAAR;AAAA,sCACI,QAAC,GAAD;AAAA,0BACK,KAAKjE,KAAL,CAAWkB;AADhB;AAAA;AAAA;AAAA;AAAA,sBADJ,eAII,QAAC,GAAD;AAAA,0BACKwD;AADL;AAAA;AAAA;AAAA;AAAA,sBAJJ,eAOI,QAAC,GAAD;AAAA,0BACK,KAAK1E,KAAL,CAAWc;AADhB;AAAA;AAAA;AAAA;AAAA,sBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eA4BI,QAAC,MAAD;AAAQ,UAAA,EAAE,EAAC,sBAAX;AAAkC,UAAA,OAAO,EAAGP,KAAD,IAAW,KAAKP,KAAL,CAAW2E,iBAAX,CAA6BpE,KAA7B,EAAoC,KAAKP,KAAL,CAAW4D,SAA/C,CAAtD;AAAiH,UAAA,OAAO,EAAC,SAAzH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA5BJ,eA6BI,QAAC,MAAD;AAAQ,UAAA,EAAE,EAAC,wBAAX;AAAoC,UAAA,EAAE,EAAC,uBAAvC;AAA+D,UAAA,OAAO,EAAE,KAAKY,aAA7E;AAA4F,UAAA,OAAO,EAAC,SAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA7BJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAoCH;;AAlE+B;;AAoEpC,MAAMI,aAAN,SAA4BtF,SAA5B,CAAsC;AAElCS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTiD,MAAAA,IAAI,EAAE,EADG;AAET2B,MAAAA,UAAU,EAAE,KAFH;AAGTnB,MAAAA,UAAU,EAAE,KAHH;AAITE,MAAAA,SAAS,EAAE;AAJF,KAAb;AAMA,SAAKkB,WAAL,GAAmB,KAAKA,WAAL,CAAiBzE,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKP,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBO,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKsE,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBtE,IAAvB,CAA4B,IAA5B,CAAzB;AACH;;AAEDyE,EAAAA,WAAW,GAAG;AACVjB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAK9D,KAAL,CAAWuC,YAAX,EAAZ;AACAsB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAK9D,KAAL,CAAW+E,WAAX,EAAZ;AACAlB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAK9D,KAAL,CAAWgF,SAAX,EAAZ;AACA,QAAIC,eAAe,GAAG,EAAtB;AACA,QAAI/B,IAAI,GAAG,KAAKjD,KAAL,CAAWiD,IAAtB;;AACA,SAAK,IAAIvB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuB,IAAI,CAACxB,MAAzB,EAAiCC,CAAC,EAAlC,EAAsC;AAClC,UAAIuD,aAAa,gBAAG,QAAC,WAAD;AAChB,QAAA,SAAS,EAAEhC,IAAI,CAACvB,CAAD,CAAJ,CAAQwD,EADH;AAEhB,QAAA,WAAW,EAAEjC,IAAI,CAACvB,CAAD,CAAJ,CAAQsC,WAFL;AAGhB,QAAA,GAAG,EAAEf,IAAI,CAACvB,CAAD,CAAJ,CAAQZ,GAHG;AAIhB,QAAA,QAAQ,EAAEmC,IAAI,CAACvB,CAAD,CAAJ,CAAQb,QAJF;AAKhB,QAAA,GAAG,EAAEoC,IAAI,CAACvB,CAAD,CAAJ,CAAQuC,gBALG;AAMhB,QAAA,SAAS,EAAEhB,IAAI,CAACvB,CAAD,CAAJ,CAAQyC,iBANH;AAOhB,QAAA,MAAM,EAAElB,IAAI,CAACvB,CAAD,CAAJ,CAAQT,MAPA;AAQhB,QAAA,KAAK,EAAEgC,IAAI,CAACvB,CAAD,CAAJ,CAAQR,KARC;AAShB,QAAA,cAAc,EAAE+B,IAAI,CAACvB,CAAD,CAAJ,CAAQP,cATR;AAUhB,QAAA,iBAAiB,EAAE,KAAKuD;AAVR,SAAkBhD,CAAlB;AAAA;AAAA;AAAA;AAAA,cAApB;;AAYAsD,MAAAA,eAAe,CAAC5B,IAAhB,CAAqB6B,aAArB;AACH;;AACD,WAAOD,eAAP;AACH;;AAEDnF,EAAAA,iBAAiB,GAAG;AAChB,SAAK8C,QAAL,CAAc;AAAEiC,MAAAA,UAAU,EAAE,IAAd;AAAoBnB,MAAAA,UAAU,EAAE;AAAhC,KAAd;AACH;;AAEDiB,EAAAA,iBAAiB,CAACpE,KAAD,EAAQqD,SAAR,EAAmB;AAChC,SAAKhB,QAAL,CAAc;AAAEiC,MAAAA,UAAU,EAAE,KAAd;AAAqBnB,MAAAA,UAAU,EAAE,IAAjC;AAAuCE,MAAAA,SAAS,EAAEA;AAAlD,KAAd;AACH;;AAEDG,EAAAA,iBAAiB,GAAG;AAChBF,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAK9D,KAAjB;AACA6D,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAK9D,KAAL,CAAWuC,YAAX,EAAZ;AACAsB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAK9D,KAAL,CAAW+E,WAAX,EAAZ;AACAlB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAK9D,KAAL,CAAWgF,SAAX,EAAZ;AACA,QAAI7C,cAAc,GAAG;AACjBC,MAAAA,MAAM,EAAE,KADS;AAEjBE,MAAAA,OAAO,EAAE;AAAE,yBAAiB,YAAY,KAAKtC,KAAL,CAAWuC,YAAX;AAA/B;AAFQ,KAArB;AAIAM,IAAAA,KAAK,CAAC,iDAAD,EAAoDV,cAApD,CAAL,CACKW,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACE,IAAT,EADtB,EAEKH,IAFL,CAEUI,IAAI,IAAI;AACV,WAAKN,QAAL,CAAc;AAAEM,QAAAA,IAAI,EAAEA;AAAR,OAAd;AACH,KAJL;AAKH;;AAGDI,EAAAA,MAAM,GAAG;AAEL,QAAI8B,IAAJ;;AACA,QAAI,KAAKnF,KAAL,CAAW4E,UAAX,KAA0B,IAA9B,EAAoC;AAChCO,MAAAA,IAAI,gBAAG,QAAC,iBAAD,OAAuB,KAAKpF,KAA5B;AAAmC,QAAA,OAAO,EAAE,KAAKA,KAAL,CAAWoD;AAAvD;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFD,MAGK;AACD,UAAI,KAAKnD,KAAL,CAAWyD,UAAX,KAA0B,IAA9B,EAAoC;AAChC0B,QAAAA,IAAI,gBAAG,QAAC,eAAD,OAAqB,KAAKpF,KAA1B;AAAiC,UAAA,OAAO,EAAE,KAAKA,KAAL,CAAWoD,OAArD;AAA8D,UAAA,SAAS,EAAE,KAAKnD,KAAL,CAAW2D;AAApF;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFD,MAGK;AACDwB,QAAAA,IAAI,gBAAG,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,KAAKtF,iBAAtB;AAAyC,UAAA,EAAE,EAAC,iBAA5C;AAA8D,UAAA,OAAO,EAAC,SAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH;AACJ;;AAED,wBACI,QAAC,KAAD,CAAO,QAAP;AAAA,8BACI,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI,QAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA,gCACI,QAAC,GAAD;AAAA,iCACI;AAAK,YAAA,EAAE,EAAC,aAAR;AAAA,mCACI,QAAC,IAAD;AAAM,cAAA,EAAE,EAAC,mBAAT;AAAA,sCACI,QAAC,IAAD,CAAM,MAAN;AAAa,gBAAA,EAAE,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,IAAD,CAAM,IAAN;AAAW,gBAAA,EAAE,EAAC,mBAAd;AAAA,uCACI,QAAC,GAAD;AAAA,yCACI,QAAC,GAAD;AAAK,oBAAA,EAAE,EAAC,GAAR;AAAA,8BACK,KAAKgF,WAAL;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAgBI,QAAC,GAAD;AAAA,iCACI;AAAK,YAAA,EAAE,EAAC,cAAR;AAAA,mCACI,QAAC,IAAD;AAAM,cAAA,EAAE,EAAC,mBAAT;AAAA,sCACI,QAAC,IAAD,CAAM,MAAN;AAAA,0BAAc,KAAK7E,KAAL,CAAW4E,UAAX,KAA0B,IAA1B,gBAAiC;AAAM,kBAAA,EAAE,EAAC,oBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAjC,GAA4F;AAA1G;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,IAAD,CAAM,IAAN;AAAW,gBAAA,EAAE,EAAC,mBAAd;AAAA,uCACI,QAAC,GAAD;AAAK,kBAAA,EAAE,EAAC,GAAR;AAAA,4BACKO;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAsCH;;AArHiC;;AAwHtC,eAAeR,aAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport './ManageCompany.css';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport NavWithDropDown from '../NavBar';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nclass CreateCompanyForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            message: '',\r\n            color: ''\r\n        }\r\n        this.createCompany = this.createCompany.bind(this);\r\n        this.sendRequest = this.sendRequest.bind(this);\r\n    }\r\n\r\n    createCompany(event) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        var name = document.getElementById(\"formCompanyName\").value;\r\n        var turnover = document.getElementById(\"formTurnover\").value;\r\n        var ceo = document.getElementById(\"formCeo\").value;\r\n        var bod = document.getElementById(\"formBoardOfDirectors\").value;\r\n        var exchanges = document.getElementById(\"formExchanges\").value;\r\n        var sector = document.getElementById(\"formSector\").value;\r\n        var brief = document.getElementById(\"formBrief\").value;\r\n        var exchangeToCode = document.getElementById(\"formETC\").value;\r\n\r\n        let myMap = new Map();\r\n        var textArray = exchangeToCode.split(\",\")\r\n        let len = textArray.length;\r\n        for (var i = 0; i < len; i++) {\r\n            var exchange = textArray[i].split(\":\")[0];\r\n            var code = textArray[i].split(\":\")[1];\r\n            myMap.set(exchange, code);\r\n        }\r\n\r\n        exchanges = exchanges.split(\",\");\r\n        bod = bod.split(\",\");\r\n        this.sendRequest(name, turnover, ceo, bod, exchanges, sector, brief, myMap);\r\n    }\r\n\r\n    sendRequest(name, turnover, ceo, bod, exchanges, sector, brief, myMap) {\r\n\r\n        var ETCObj = {};\r\n        var inArray = [...myMap.entries()];\r\n        var length = inArray.length;\r\n        for (var i = 0; i < length; i++) {\r\n            ETCObj[inArray[i][0]] = inArray[i][1];\r\n        }\r\n\r\n        var jsonBody = {\r\n            \"companyName\": name,\r\n            \"turnover\": turnover,\r\n            \"ceo\": ceo,\r\n            \"boardOfDirectors\": bod,\r\n            \"listedInExchanges\": exchanges,\r\n            \"sector\": sector,\r\n            \"brief\": brief,\r\n            \"exchangeToCode\": ETCObj\r\n        }\r\n\r\n        var requestOptions = {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            headers: { 'Content-Type': 'application/json', \"Authorization\": \"Bearer \" + this.props.getAuthToken() },\r\n            body: JSON.stringify(jsonBody),\r\n            referrerPolicy: \"no-referrer\",\r\n        }\r\n        this.setState(() => {\r\n            fetch('https://company--service.herokuapp.com/company/create', requestOptions)\r\n                .then(response => {\r\n                    if (response.status === 200) {\r\n                        this.setState({\r\n                            message: \"New Company created \",\r\n                            color: \"green\"\r\n                        })\r\n                        return response.json();\r\n                    }\r\n                    else {\r\n                        this.setState({\r\n                            message: \"Error creating Company!\",\r\n                            color: \"red\"\r\n                        })\r\n                    }\r\n                    return null;\r\n                }).then(data => {\r\n                    if (data != null) {\r\n                        setTimeout(() => {\r\n                            this.props.history.push(\"/adminHome\");\r\n                        }, 2000);\r\n                    }\r\n                })\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        var messagestyle = {\r\n            fontSize: '16px',\r\n            color: this.state.color\r\n        }\r\n\r\n        return (\r\n            <Form id=\"create-company-form\" onSubmit={this.createCompany}>\r\n                <Form.Group controlId=\"formCompanyName\">\r\n                    <Form.Label>Company Name</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Company name\" required />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formTurnover\">\r\n                    <Form.Label>Turnover</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter Turnover in Crores\" required />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formCeo\">\r\n                    <Form.Label>CEO</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter CEO\" required />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBoardOfDirectors\">\r\n                    <Form.Label>Board Of Directors</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter directors in comma seperated\" required />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formExchanges\">\r\n                    <Form.Label>Exchanges</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter exchanges in comma seperated\" required />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formSector\">\r\n                    <Form.Label>Sector</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter Sector\" required />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBrief\">\r\n                    <Form.Label>Brief</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter Brief\" required />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formETC\">\r\n                    <Form.Label>Exchange To Code</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter Code for each exchange\" required />\r\n                </Form.Group>\r\n\r\n                <br></br>\r\n                <br></br>\r\n                <Row>\r\n                    <Col>\r\n                        <Button id=\"create-company-button\" variant=\"primary\" type=\"submit\">\r\n                            Create Company\r\n                        </Button>\r\n                    </Col>\r\n\r\n                    <Col>\r\n                        <span style={messagestyle}>{this.state.message}</span>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nclass EditCompanyForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            turnover: '',\r\n            ceo: '',\r\n            bod: '',\r\n            exchanges: '',\r\n            sector: '',\r\n            brief: '',\r\n            exchangeToCode: {}\r\n        }\r\n        this.updateForm = this.updateForm.bind(this);\r\n    }\r\n\r\n    updateForm(e) {\r\n        e.preventDefault();\r\n\r\n        var jsonBody = {\r\n            \"companyName\": this.state.name,\r\n            \"turnover\": this.state.turnover,\r\n            \"ceo\": this.state.ceo,\r\n            \"boardOfDirectors\": this.state.bod.split(\",\"),\r\n            \"listedInExchanges\": this.state.exchanges.split(\",\"),\r\n            \"sector\": this.state.sector,\r\n            \"brief\": this.state.brief,\r\n            \"exchangeToCode\": this.state.exchangeToCode\r\n        }\r\n        var requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json', \"Authorization\": \"Bearer \" + this.props.getAuthToken() },\r\n            body: JSON.stringify(jsonBody),\r\n            referrerPolicy: \"no-referrer\",\r\n        }\r\n\r\n        fetch(`https://company--service.herokuapp.com/company/update/${this.props.companyId}`, requestOptions)\r\n            .then(response => {\r\n                if (response.status === 200) {\r\n                    console.log(\"in 200\");\r\n                    return response.json();\r\n                }\r\n                else {\r\n                    console.log(\"in !200\");\r\n                }\r\n                return null;\r\n            }).then(data => {\r\n                console.log(data);\r\n                setTimeout(() => {\r\n                    this.props.history.push(\"/adminHome\");\r\n                }, 3000);\r\n            })\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            headers: { \"Authorization\": \"Bearer \" + this.props.getAuthToken() }\r\n        }\r\n        console.log(this.props.ipoId);\r\n        fetch(`https://company--service.herokuapp.com/company/${this.props.companyId}`, requestOptions)\r\n            .then(response => {\r\n                if (response.status === 200) {\r\n                    return response.json();\r\n                }\r\n                return null;\r\n            }).then(data => {\r\n                console.log(data);\r\n                if (data != null) {\r\n                    this.setState({\r\n                        name: data.companyName,\r\n                        turnover: data.turnover,\r\n                        ceo: data.ceo,\r\n                        bod: data.boardOfDirectors.toString(),\r\n                        exchanges: data.listedInExchanges.toString(),\r\n                        sector: data.sector,\r\n                        brief: data.brief,\r\n                        exchangeToCode: data.exchangeToCode\r\n                    });\r\n                }\r\n            })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Form className=\"justify-content-center\" onSubmit={this.getData}>\r\n                <Form.Group controlId=\"formCompanyName\">\r\n                    <Form.Label>Company Name</Form.Label>\r\n                    <Form.Control onChange={e => this.setState({ name: e.target.value })} value={this.state.name} type=\"text\" placeholder=\"Company name\" required />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formTurnover\">\r\n                    <Form.Label>Turnover</Form.Label>\r\n                    <Form.Control type=\"text\" onChange={e => this.setState({ turnover: e.target.value })} value={this.state.turnover} placeholder=\"Enter Turnover in Crores\" required />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formCeo\">\r\n                    <Form.Label>CEO</Form.Label>\r\n                    <Form.Control onChange={e => this.setState({ ceo: e.target.value })} value={this.state.ceo} type=\"text\" placeholder=\"Enter CEO\" required />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBoardOfDirectors\">\r\n                    <Form.Label>Board Of Directors</Form.Label>\r\n                    <Form.Control onChange={e => this.setState({ bod: e.target.value })} value={this.state.bod} type=\"text\" placeholder=\"Enter directors in comma seperated\" required />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formExchanges\">\r\n                    <Form.Label>Exchanges</Form.Label>\r\n                    <Form.Control type=\"text\" onChange={e => this.setState({ exchanges: e.target.value })} value={this.state.exchanges} placeholder=\"Enter exchanges in comma seperated\" required />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formSector\">\r\n                    <Form.Label>Sector</Form.Label>\r\n                    <Form.Control onChange={e => this.setState({ sector: e.target.value })} value={this.state.sector} type=\"text\" placeholder=\"Enter Sector\" required />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBrief\">\r\n                    <Form.Label>Brief</Form.Label>\r\n                    <Form.Control onChange={e => this.setState({ brief: e.target.value })} value={this.state.brief} type=\"text\" placeholder=\"Enter Brief\" required />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formETC\">\r\n                    <Form.Label>Exchange To Code</Form.Label>\r\n                    <Form.Control onChange={e => this.setState({ exchangeToCode: e.target.value })} value={JSON.stringify(this.state.exchangeToCode)} type=\"text\" placeholder=\"Enter Code for each exchange\" required />\r\n                </Form.Group>\r\n\r\n\r\n                <br></br>\r\n                <br></br>\r\n                <Button variant=\"primary\" type=\"submit\" onClick={this.updateForm}>\r\n                    Update\r\n                </Button>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nclass CompanyCard extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            updateForm: false\r\n        }\r\n        this.deleteCompany = this.deleteCompany.bind(this);\r\n    }\r\n\r\n    deleteCompany() {\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            headers: { \"Authorization\": \"Bearer \" + this.props.getAuthToken() }\r\n        }\r\n\r\n        fetch(`http://localhost:8082/company/delete/${this.props.companyName}`, requestOptions)\r\n            .then(res => {\r\n                if (res.status == 200)\r\n                    return res.json();\r\n            })\r\n            .then(data => {\r\n                if (data != null) {\r\n                    console.log(\"done\");\r\n                }\r\n            })\r\n    }\r\n    render() {\r\n        var exchanges = this.props.exchanges;\r\n        var companyExchange = exchanges.toString();\r\n        return (\r\n            <Card bg=\"white\" id=\"each-card-company\" text=\"black\">\r\n                <Card.Header>{this.props.companyName}</Card.Header>\r\n                <Card.Body>\r\n                    <Card.Text>\r\n                        <Container>\r\n                            <Row md=\"3\">\r\n                                <Col>\r\n                                    Sector\r\n                                </Col>\r\n                                <Col>\r\n                                    Listed in Exchanges\r\n                                </Col>\r\n                                <Col>\r\n                                    TurnOver\r\n                                </Col>\r\n                            </Row>\r\n                            <br></br>\r\n                            <Row md=\"3\">\r\n                                <Col>\r\n                                    {this.props.sector}\r\n                                </Col>\r\n                                <Col>\r\n                                    {companyExchange}\r\n                                </Col>\r\n                                <Col>\r\n                                    {this.props.turnover}\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </Card.Text>\r\n                    <Button id=\"edit-details-company\" onClick={(event) => this.props.UpdateCompanyForm(event, this.props.companyId)} variant=\"primary\">Edit Details</Button>\r\n                    <Button id=\"delete-details-company\" id=\"delete-company-button\" onClick={this.deleteCompany} variant=\"primary\">Delete Company</Button>\r\n                </Card.Body>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\nclass ManageCompany extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            createForm: false,\r\n            updateForm: false,\r\n            companyId: ''\r\n        }\r\n        this.DisplayData = this.DisplayData.bind(this);\r\n        this.CreateCompanyForm = this.CreateCompanyForm.bind(this);\r\n        this.UpdateCompanyForm = this.UpdateCompanyForm.bind(this);\r\n    }\r\n\r\n    DisplayData() {\r\n        console.log(this.props.getAuthToken());\r\n        console.log(this.props.getUserName());\r\n        console.log(this.props.getUserId());\r\n        var CompanyCardList = [];\r\n        var data = this.state.data;\r\n        for (var i = 0; i < data.length; i++) {\r\n            var companyBanner = <CompanyCard key={i}\r\n                companyId={data[i].id}\r\n                companyName={data[i].companyName}\r\n                ceo={data[i].ceo}\r\n                turnover={data[i].turnover}\r\n                BOD={data[i].boardOfDirectors}\r\n                exchanges={data[i].listedInExchanges}\r\n                sector={data[i].sector}\r\n                brief={data[i].brief}\r\n                exchangeToCode={data[i].exchangeToCode}\r\n                UpdateCompanyForm={this.UpdateCompanyForm}\r\n            />\r\n            CompanyCardList.push(companyBanner);\r\n        }\r\n        return CompanyCardList;\r\n    }\r\n\r\n    CreateCompanyForm() {\r\n        this.setState({ createForm: true, updateForm: false });\r\n    }\r\n\r\n    UpdateCompanyForm(event, companyId) {\r\n        this.setState({ createForm: false, updateForm: true, companyId: companyId });\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.props);\r\n        console.log(this.props.getAuthToken());\r\n        console.log(this.props.getUserName());\r\n        console.log(this.props.getUserId());\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            headers: { \"Authorization\": \"Bearer \" + this.props.getAuthToken() }\r\n        }\r\n        fetch(\"https://company--service.herokuapp.com/company/\", requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.setState({ data: data });\r\n            })\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        let form;\r\n        if (this.state.createForm === true) {\r\n            form = <CreateCompanyForm {...this.props} history={this.props.history} />;\r\n        }\r\n        else {\r\n            if (this.state.updateForm === true) {\r\n                form = <EditCompanyForm {...this.props} history={this.props.history} companyId={this.state.companyId} />;\r\n            }\r\n            else {\r\n                form = <Button onClick={this.CreateCompanyForm} id=\"add-new-company\" variant=\"primary\">Add New Company</Button>;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <NavWithDropDown />\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <Row md=\"2\">\r\n                    <Col>\r\n                        <div id=\"ipo-company\">\r\n                            <Card id=\"main-card-company\">\r\n                                <Card.Header id=\"card-header-company\">Listed Companies</Card.Header>\r\n                                <Card.Body id=\"card-body-company\">\r\n                                    <Col>\r\n                                        <Row md=\"1\">\r\n                                            {this.DisplayData()}\r\n                                        </Row>\r\n                                    </Col>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </div>\r\n                    </Col>\r\n\r\n                    <Col>\r\n                        <div id=\"form-company\">\r\n                            <Card id=\"form-card-company\">\r\n                                <Card.Header>{this.state.createForm === true ? <span id=\"company-new-header\">Create New Company </span> : ''}</Card.Header>\r\n                                <Card.Body id=\"form-body-company\">\r\n                                    <Row md=\"1\">\r\n                                        {form}\r\n                                    </Row>\r\n\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ManageCompany;"]},"metadata":{},"sourceType":"module"}