{"ast":null,"code":"var _jsxFileName = \"D:\\\\stock-chart\\\\src\\\\Components\\\\CompareCompany\\\\CompareCompany.js\";\nimport React, { Component } from 'react';\nimport './CompareCompany.css';\nimport Card from 'react-bootstrap/Card';\nimport { Button, Form } from 'react-bootstrap';\nimport NavWithDropDownUser from '../UserNavBar';\nimport { Row, Col } from 'react-bootstrap';\nimport ReactFC from \"react-fusioncharts\";\nimport FusionCharts from \"fusioncharts\";\nimport charts from \"fusioncharts/fusioncharts.charts\";\nimport ReactFusioncharts from \"react-fusioncharts\";\nimport Column2D from \"fusioncharts/fusioncharts.charts\";\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ncharts(FusionCharts);\n\nclass CompareCompany extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      exchangeData: [],\n      exchangeSelected: '',\n      companySelected: '',\n      fromPeriod: '',\n      toPeriod: '',\n      periodicity: '',\n      dataFormatChart: [],\n      addButtonClicked: false,\n      secondCompanySelected: ''\n    };\n    this.generateMap = this.generateMap.bind(this);\n    this.addNewForm = this.addNewForm.bind(this);\n  }\n\n  addNewForm() {\n    this.setState({\n      addButtonClicked: true\n    });\n  }\n\n  componentDidMount() {\n    var requestOptions = {\n      method: 'GET',\n      headers: {\n        \"Authorization\": \"Bearer \" + this.props.getAuthToken()\n      }\n    };\n    Promise.all([fetch(\"http://localhost:8082/company/getCompanies\", requestOptions), fetch(\"http://localhost:8084/stockexchange/getNames\", requestOptions)]).then(([res1, res2]) => {\n      return Promise.all([res1.json(), res2.json()]);\n    }).then(([res1, res2]) => {\n      this.setState({\n        data: res1,\n        exchangeData: res2\n      });\n    });\n  }\n\n  generateMap(e) {\n    e.preventDefault();\n    var jsonBody = {\n      \"exchange\": this.state.exchangeSelected,\n      \"company\": this.state.companySelected,\n      \"fromPeriod\": this.state.fromPeriod,\n      \"toPeriod\": this.state.toPeriod,\n      \"periodicity\": this.state.periodicity\n    };\n    var requestOptions = {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(jsonBody)\n    };\n    fetch('http://localhost:8085/excel/getCompaniesByDate', requestOptions).then(res => {\n      if (res.status === 200) {\n        return res.json();\n      } else {\n        console.log(res.status);\n      }\n\n      return null;\n    }).then(data => {\n      if (data != null) {\n        console.log(data);\n        let dataChart = [];\n        var length = data.length;\n\n        for (var i = 0; i < length; i++) {\n          let price = data[i].currentPrice;\n          let date = data[i].date;\n          let tempObj = {\n            \"label\": date,\n            \"value\": price\n          };\n          dataChart.push(tempObj);\n        }\n\n        console.log(dataChart);\n        this.setState({\n          dataFormatChart: dataChart,\n          addButtonClicked: false\n        });\n      }\n    });\n  }\n\n  render() {\n    const dataSource = {\n      chart: {\n        caption: \"Stock Market Price\",\n        yaxisname: \"Date\",\n        numberprefix: \"Rs.\",\n        rotatelabels: \"1\",\n        setadaptiveymin: \"1\",\n        theme: \"fusion\"\n      },\n      data: this.state.dataFormatChart\n    };\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NavWithDropDownUser, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"compare-main-div\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            id: \"select-form-cc\",\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              id: \"header-cc\",\n              children: \"Compare Companies and Sectors\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(Form, {\n                  children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 137,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      id: \"select-c-s\",\n                      children: \"Select Stock Exchange\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 139,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                      onChange: e => this.setState({\n                        exchangeSelected: e.target.value\n                      }),\n                      name: \"exchange\",\n                      id: \"exchange\",\n                      children: this.state.exchangeData.map(exchange => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: exchange,\n                        children: exchange\n                      }, exchange, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 142,\n                        columnNumber: 29\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 140,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Enter Company\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 150,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      onChange: e => this.setState({\n                        companySelected: e.target.value\n                      }),\n                      type: \"text\",\n                      id: \"select-c\",\n                      placeholder: \"Enter Company name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 151,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 149,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 153,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Row, {\n                    md: \"2\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                        id: \"from-period\",\n                        children: \"From Period\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 156,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                        onChange: e => this.setState({\n                          fromPeriod: e.target.value\n                        }),\n                        id: \"select-d\",\n                        type: \"date\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 157,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 155,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                        children: \"To Period\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 161,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                        onChange: e => this.setState({\n                          toPeriod: e.target.value\n                        }),\n                        id: \"select-d\",\n                        type: \"date\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 162,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 160,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 154,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Row, {\n                    md: \"2\",\n                    children: [/*#__PURE__*/_jsxDEV(Col, {\n                      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                          id: \"select-p\",\n                          children: \"Select Periodicity\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 170,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                          onChange: e => this.setState({\n                            periodicity: e.target.value\n                          }),\n                          name: \"period\",\n                          id: \"period\",\n                          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"weekly\",\n                            children: \"Weekly\"\n                          }, \"weekly\", false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 172,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"monthly\",\n                            children: \"Monthly\"\n                          }, \"monthly\", false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 173,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"quarterly\",\n                            children: \"Quarterly\"\n                          }, \"quarterly\", false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 174,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"yearly\",\n                            children: \"Yearly\"\n                          }, \"yearly\", false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 175,\n                            columnNumber: 33\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 171,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 169,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 168,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                        children: \" Click to add company\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 180,\n                        columnNumber: 29\n                      }, this), this.state.addButtonClicked === false ? /*#__PURE__*/_jsxDEV(Button, {\n                        onClick: this.addNewForm,\n                        id: \"add-button\",\n                        variant: \"primary\",\n                        children: \" + \"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 181,\n                        columnNumber: 70\n                      }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"text\",\n                        onChange: e => this.setState({\n                          secondCompanySelected: e.target.value\n                        }),\n                        placeholder: \"Enter new company name\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 181,\n                        columnNumber: 152\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 179,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 167,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: this.generateMap,\n                    variant: \"primary\",\n                    id: \"generate\",\n                    type: \"submit\",\n                    children: \"Generate Chart\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 188,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"chart\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            id: \"chart-display\",\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              id: \"chart-header\",\n              children: \" Chart\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              id: \"chart-body\",\n              children: /*#__PURE__*/_jsxDEV(ReactFusioncharts, {\n                id: \"fusionCharts\",\n                type: \"line\",\n                width: \"100%\",\n                height: \"100%\",\n                dataFormat: \"JSON\",\n                dataSource: dataSource\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default CompareCompany;","map":{"version":3,"sources":["D:/stock-chart/src/Components/CompareCompany/CompareCompany.js"],"names":["React","Component","Card","Button","Form","NavWithDropDownUser","Row","Col","ReactFC","FusionCharts","charts","ReactFusioncharts","Column2D","FusionTheme","CompareCompany","constructor","props","state","data","exchangeData","exchangeSelected","companySelected","fromPeriod","toPeriod","periodicity","dataFormatChart","addButtonClicked","secondCompanySelected","generateMap","bind","addNewForm","setState","componentDidMount","requestOptions","method","headers","getAuthToken","Promise","all","fetch","then","res1","res2","json","e","preventDefault","jsonBody","body","JSON","stringify","res","status","console","log","dataChart","length","i","price","currentPrice","date","tempObj","push","render","dataSource","chart","caption","yaxisname","numberprefix","rotatelabels","setadaptiveymin","theme","target","value","map","exchange"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './CompareCompany.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport {Button,Form} from 'react-bootstrap';\r\nimport NavWithDropDownUser from '../UserNavBar';\r\nimport {Row,Col} from 'react-bootstrap';\r\nimport ReactFC from \"react-fusioncharts\";\r\nimport FusionCharts from \"fusioncharts\";\r\nimport charts from \"fusioncharts/fusioncharts.charts\";\r\nimport ReactFusioncharts from \"react-fusioncharts\";\r\nimport Column2D from \"fusioncharts/fusioncharts.charts\";\r\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\r\n\r\ncharts(FusionCharts);\r\n\r\nclass CompareCompany extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            data : [],\r\n            exchangeData : [],\r\n            exchangeSelected : '',\r\n            companySelected : '',\r\n            fromPeriod : '',\r\n            toPeriod : '',\r\n            periodicity : '',\r\n            dataFormatChart : [],\r\n            addButtonClicked : false,\r\n            secondCompanySelected : ''\r\n        }\r\n        this.generateMap = this.generateMap.bind(this);\r\n        this.addNewForm = this.addNewForm.bind(this);\r\n    }\r\n\r\n    addNewForm(){\r\n        this.setState({addButtonClicked : true});\r\n    }\r\n\r\n    componentDidMount(){\r\n        \r\n        var requestOptions = {\r\n            method : 'GET',\r\n            headers : {\"Authorization\" : \"Bearer \" + this.props.getAuthToken() }\r\n        }\r\n\r\n        Promise.all([\r\n            fetch(\"http://localhost:8082/company/getCompanies\",requestOptions),\r\n            fetch(\"http://localhost:8084/stockexchange/getNames\",requestOptions)\r\n        ])\r\n        .then(([res1,res2]) => {\r\n            return Promise.all([res1.json(),res2.json()])\r\n        })\r\n        .then(([res1,res2]) => {\r\n            this.setState({\r\n                data : res1,\r\n                exchangeData : res2\r\n            })\r\n        })\r\n    }\r\n\r\n    generateMap(e){\r\n        e.preventDefault();\r\n        var jsonBody = {\r\n            \"exchange\" : this.state.exchangeSelected,\r\n            \"company\" : this.state.companySelected,\r\n            \"fromPeriod\" : this.state.fromPeriod,\r\n            \"toPeriod\" : this.state.toPeriod,\r\n            \"periodicity\" : this.state.periodicity\r\n        }\r\n\r\n        var requestOptions = {\r\n            method : 'POST',\r\n            headers : {\"Content-Type\":\"application/json\" },\r\n            body : JSON.stringify(jsonBody)            \r\n        }\r\n\r\n        fetch('http://localhost:8085/excel/getCompaniesByDate',requestOptions)\r\n        .then(res => {\r\n            if(res.status === 200){\r\n                return res.json();\r\n            }\r\n            else{\r\n                console.log(res.status);\r\n            }\r\n            return null;\r\n        })\r\n        .then(data => {\r\n            if(data != null){\r\n                console.log(data);\r\n                let dataChart = [];\r\n                var length = data.length;\r\n                for(var i = 0;i<length;i++){\r\n                    let price = data[i].currentPrice;\r\n                    let date = data[i].date;\r\n                    let tempObj = {\r\n                        \"label\" : date,\r\n                        \"value\" : price\r\n                    }\r\n\r\n                    dataChart.push(tempObj);\r\n                }\r\n                console.log(dataChart);\r\n                this.setState({\r\n                    dataFormatChart : dataChart,\r\n                    addButtonClicked : false\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const dataSource = {\r\n            chart : {\r\n                caption : \"Stock Market Price\",\r\n                yaxisname : \"Date\",\r\n                numberprefix: \"Rs.\",\r\n                rotatelabels: \"1\",\r\n                setadaptiveymin:\"1\",\r\n                theme:\"fusion\"\r\n            },\r\n            data : this.state.dataFormatChart\r\n        };\r\n\r\n        return(\r\n            <React.Fragment>\r\n                <NavWithDropDownUser />\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <Row>\r\n                <div id=\"compare-main-div\">\r\n                <Card id=\"select-form-cc\">\r\n                <Card.Header id=\"header-cc\">Compare Companies and Sectors</Card.Header>\r\n                <Card.Body>\r\n                    <Col>\r\n                    <Form>\r\n                        <br></br>\r\n                        <Form.Group>\r\n                            <Form.Label id=\"select-c-s\">Select Stock Exchange</Form.Label>\r\n                            <select  onChange={e => this.setState({exchangeSelected : e.target.value})} name=\"exchange\" id=\"exchange\">\r\n                            {this.state.exchangeData.map(exchange => (\r\n                            <option key={exchange} value={exchange}>\r\n                                {exchange}\r\n                            </option>\r\n                            ))}\r\n                            </select>\r\n                        </Form.Group>\r\n                                <br></br>\r\n                        <Form.Group>\r\n                            <Form.Label>Enter Company</Form.Label>\r\n                            <input onChange={e => this.setState({companySelected : e.target.value})} type=\"text\" id=\"select-c\" placeholder=\"Enter Company name\" />\r\n                        </Form.Group>\r\n                        <br></br>\r\n                        <Row md=\"2\">\r\n                            <Form.Group>\r\n                                <Form.Label id=\"from-period\">From Period</Form.Label>\r\n                                <input onChange={e => this.setState({fromPeriod : e.target.value})} id=\"select-d\" type=\"date\"/>\r\n                            </Form.Group>\r\n                            \r\n                            <Form.Group>\r\n                                <Form.Label>To Period</Form.Label>\r\n                                <input onChange={e => this.setState({toPeriod : e.target.value})} id=\"select-d\" type=\"date\"/>\r\n                            </Form.Group>\r\n                        </Row>\r\n                        \r\n                        <br></br>\r\n                        <Row md=\"2\">\r\n                        <Col>\r\n                        <Form.Group>\r\n                            <Form.Label id=\"select-p\">Select Periodicity</Form.Label>\r\n                            <select onChange={e => this.setState({periodicity : e.target.value})} name=\"period\" id=\"period\">\r\n                                <option key=\"weekly\" value=\"weekly\">Weekly</option>\r\n                                <option key=\"monthly\" value=\"monthly\">Monthly</option>\r\n                                <option key=\"quarterly\" value=\"quarterly\">Quarterly</option>\r\n                                <option key=\"yearly\" value=\"yearly\">Yearly</option>\r\n                            </select> \r\n                        </Form.Group>\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Label> Click to add company</Form.Label>\r\n                            {this.state.addButtonClicked === false ? <Button onClick={this.addNewForm}id=\"add-button\" variant=\"primary\"> + </Button> : <input type=\"text\" onChange={e => this.setState({secondCompanySelected : e.target.value})} placeholder=\"Enter new company name\" />}\r\n                            \r\n                        </Col> \r\n                        </Row>\r\n                        \r\n                        \r\n                        \r\n                        <Button onClick={this.generateMap} variant=\"primary\" id=\"generate\" type=\"submit\">\r\n                            Generate Chart\r\n                        </Button>\r\n                        \r\n                    </Form>\r\n                    </Col>   \r\n                </Card.Body>\r\n            \r\n                </Card>\r\n                </div>\r\n\r\n                <div id=\"chart\">\r\n                    <Card id=\"chart-display\">\r\n                        <Card.Header id=\"chart-header\"> Chart</Card.Header>\r\n                        <Card.Body id=\"chart-body\">\r\n                        <ReactFusioncharts\r\n                                id=\"fusionCharts\"\r\n                                type=\"line\"\r\n                                width=\"100%\"\r\n                                height=\"100%\"\r\n                                dataFormat=\"JSON\"\r\n                                dataSource={dataSource}\r\n                                />         \r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n            </Row>\r\n\r\n            </React.Fragment>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default CompareCompany;"]},"metadata":{},"sourceType":"module"}