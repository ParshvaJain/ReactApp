{"ast":null,"code":"var _jsxFileName = \"D:\\\\stock-chart\\\\src\\\\Components\\\\ImportData\\\\ImportData.js\";\nimport React, { Component } from 'react';\nimport './ImportData.css';\nimport XLSX from \"xlsx\";\nimport NavWithDropDown from '../NavBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ImportData extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: []\n      /* Array of Arrays e.g. [[\"a\",\"b\"],[1,2]] */\n      ,\n      cols: []\n      /* Array of column objects e.g. { name: \"C\", K: 2 } */\n\n    };\n    this.handleFile = this.handleFile.bind(this);\n    this.exportFile = this.exportFile.bind(this);\n  }\n\n  handleFile(file\n  /*:File*/\n  ) {\n    /* Boilerplate to set up FileReader */\n    const reader = new FileReader();\n    const rABS = !!reader.readAsBinaryString;\n\n    reader.onload = e => {\n      /* Parse data */\n      const bstr = e.target.result;\n      const wb = XLSX.read(bstr, {\n        type: rABS ? \"binary\" : \"array\"\n      });\n      /* Get first worksheet */\n\n      const wsname = wb.SheetNames[0];\n      const ws = wb.Sheets[wsname];\n      console.log(rABS, wb);\n      /* Convert array of arrays */\n\n      const data = XLSX.utils.sheet_to_json(ws, {\n        header: 1\n      });\n      console.log(JSON.stringify(data) + \"this data needs to be passed to rest endpoint to save prices\");\n      /* Update state */\n\n      this.setState({\n        data: data,\n        cols: make_cols(ws[\"!ref\"])\n      });\n    };\n\n    if (rABS) reader.readAsBinaryString(file);else reader.readAsArrayBuffer(file);\n  }\n\n  exportFile() {\n    /* convert state to workbook */\n    const ws = XLSX.utils.aoa_to_sheet(this.state.data);\n    const wb = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wb, ws, \"SheetJS\");\n    /* generate XLSX file and send to client */\n\n    XLSX.writeFile(wb, \"sheetjs.xlsx\");\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(DragDropFile, {\n      handleFile: this.handleFile,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-xs-12\",\n          children: /*#__PURE__*/_jsxDEV(DataInput, {\n            handleFile: this.handleFile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-xs-12\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: !this.state.data.length,\n            className: \"btn btn-success\",\n            onClick: this.exportFile,\n            children: \"Export\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-xs-12\",\n          children: /*#__PURE__*/_jsxDEV(OutTable, {\n            data: this.state.data,\n            cols: this.state.cols\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nclass DragDropFile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onDrop = this.onDrop.bind(this);\n  }\n\n  suppress(evt) {\n    evt.stopPropagation();\n    evt.preventDefault();\n  }\n\n  onDrop(evt) {\n    evt.stopPropagation();\n    evt.preventDefault();\n    const files = evt.dataTransfer.files;\n    if (files && files[0]) this.props.handleFile(files[0]);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      onDrop: this.onDrop,\n      onDragEnter: this.suppress,\n      onDragOver: this.suppress,\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nclass DataInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    const files = e.target.files;\n    if (files && files[0]) this.props.handleFile(files[0]);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NavWithDropDown, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form-inline\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"file\",\n            children: \"Spreadsheet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            className: \"form-control\",\n            id: \"file\",\n            accept: SheetJSFT,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nclass OutTable extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-responsive\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-striped\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: this.props.cols.map(c => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: c.name\n            }, c.key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.props.data.map((r, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: this.props.cols.map(c => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: r[c.key]\n            }, c.key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 21\n            }, this))\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n/* list of supported file types */\n\n\nconst SheetJSFT = [\"xlsx\", \"xlsb\", \"xlsm\", \"xls\", \"xml\", \"csv\", \"txt\", \"ods\", \"fods\", \"uos\", \"sylk\", \"dif\", \"dbf\", \"prn\", \"qpw\", \"123\", \"wb*\", \"wq*\", \"html\", \"htm\"].map(function (x) {\n  return \".\" + x;\n}).join(\",\");\n/* generate an array of column objects */\n\nconst make_cols = refstr => {\n  let o = [],\n      C = XLSX.utils.decode_range(refstr).e.c + 1;\n\n  for (var i = 0; i < C; ++i) o[i] = {\n    name: XLSX.utils.encode_col(i),\n    key: i\n  };\n\n  return o;\n};\n\nexport default ImportData;","map":{"version":3,"sources":["D:/stock-chart/src/Components/ImportData/ImportData.js"],"names":["React","Component","XLSX","NavWithDropDown","ImportData","constructor","props","state","data","cols","handleFile","bind","exportFile","file","reader","FileReader","rABS","readAsBinaryString","onload","e","bstr","target","result","wb","read","type","wsname","SheetNames","ws","Sheets","console","log","utils","sheet_to_json","header","JSON","stringify","setState","make_cols","readAsArrayBuffer","aoa_to_sheet","book_new","book_append_sheet","writeFile","render","length","DragDropFile","onDrop","suppress","evt","stopPropagation","preventDefault","files","dataTransfer","children","DataInput","handleChange","SheetJSFT","OutTable","map","c","name","key","r","i","x","join","refstr","o","C","decode_range","encode_col"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './ImportData.css';\r\nimport XLSX from \"xlsx\";\r\nimport NavWithDropDown from '../NavBar';\r\n\r\nclass ImportData extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          data: [] /* Array of Arrays e.g. [[\"a\",\"b\"],[1,2]] */,\r\n          cols: [] /* Array of column objects e.g. { name: \"C\", K: 2 } */\r\n        };\r\n        this.handleFile = this.handleFile.bind(this);\r\n        this.exportFile = this.exportFile.bind(this);\r\n      }\r\n      handleFile(file /*:File*/) {\r\n        /* Boilerplate to set up FileReader */\r\n        const reader = new FileReader();\r\n        const rABS = !!reader.readAsBinaryString;\r\n        reader.onload = e => {\r\n          /* Parse data */\r\n          const bstr = e.target.result;\r\n          const wb = XLSX.read(bstr, { type: rABS ? \"binary\" : \"array\" });\r\n          /* Get first worksheet */\r\n          const wsname = wb.SheetNames[0];\r\n          const ws = wb.Sheets[wsname];\r\n          console.log(rABS, wb);\r\n          /* Convert array of arrays */\r\n          const data = XLSX.utils.sheet_to_json(ws, { header: 1 });\r\n          console.log(JSON.stringify(data)+\"this data needs to be passed to rest endpoint to save prices\");\r\n          /* Update state */\r\n          this.setState({ data: data, cols: make_cols(ws[\"!ref\"]) });\r\n        };\r\n        if (rABS) reader.readAsBinaryString(file);\r\n        else reader.readAsArrayBuffer(file);\r\n      }\r\n      exportFile() {\r\n        /* convert state to workbook */\r\n        const ws = XLSX.utils.aoa_to_sheet(this.state.data);\r\n        const wb = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(wb, ws, \"SheetJS\");\r\n        /* generate XLSX file and send to client */\r\n        XLSX.writeFile(wb, \"sheetjs.xlsx\");\r\n      }\r\n      render() {\r\n        return (\r\n          <DragDropFile handleFile={this.handleFile}>\r\n            <div className=\"row\">\r\n              <div className=\"col-xs-12\">\r\n                <DataInput handleFile={this.handleFile} />\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-xs-12\">\r\n                <button\r\n                  disabled={!this.state.data.length}\r\n                  className=\"btn btn-success\"\r\n                  onClick={this.exportFile}\r\n                >\r\n                  Export\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-xs-12\">\r\n                <OutTable data={this.state.data} cols={this.state.cols} />\r\n              </div>\r\n            </div>\r\n          </DragDropFile>\r\n        );\r\n      }\r\n}\r\n\r\nclass DragDropFile extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.onDrop = this.onDrop.bind(this);\r\n    }\r\n    suppress(evt) {\r\n      evt.stopPropagation();\r\n      evt.preventDefault();\r\n    }\r\n    onDrop(evt) {\r\n      evt.stopPropagation();\r\n      evt.preventDefault();\r\n      const files = evt.dataTransfer.files;\r\n      if (files && files[0]) this.props.handleFile(files[0]);\r\n    }\r\n    render() {\r\n      return (\r\n        <div\r\n          onDrop={this.onDrop}\r\n          onDragEnter={this.suppress}\r\n          onDragOver={this.suppress}\r\n        >\r\n          {this.props.children}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  class DataInput extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    handleChange(e) {\r\n      const files = e.target.files;\r\n      if (files && files[0]) this.props.handleFile(files[0]);\r\n    }\r\n    render() {\r\n      return (\r\n        <React.Fragment>\r\n            <NavWithDropDown />\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            \r\n            <form className=\"form-inline\">\r\n            <div className=\"form-group\">\r\n            <label htmlFor=\"file\">Spreadsheet</label>\r\n            <input\r\n              type=\"file\"\r\n              className=\"form-control\"\r\n              id=\"file\"\r\n              accept={SheetJSFT}\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n        </form>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  }\r\n\r\n  class OutTable extends React.Component {\r\n    render() {\r\n      return (\r\n        <div className=\"table-responsive\">\r\n          <table className=\"table table-striped\">\r\n            <thead>\r\n              <tr>\r\n                {this.props.cols.map(c => (\r\n                  <th key={c.key}>{c.name}</th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.props.data.map((r, i) => (\r\n                <tr key={i}>\r\n                  {this.props.cols.map(c => (\r\n                    <td key={c.key}>{r[c.key]}</td>\r\n                  ))}\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  /* list of supported file types */\r\n  const SheetJSFT = [\r\n    \"xlsx\",\r\n    \"xlsb\",\r\n    \"xlsm\",\r\n    \"xls\",\r\n    \"xml\",\r\n    \"csv\",\r\n    \"txt\",\r\n    \"ods\",\r\n    \"fods\",\r\n    \"uos\",\r\n    \"sylk\",\r\n    \"dif\",\r\n    \"dbf\",\r\n    \"prn\",\r\n    \"qpw\",\r\n    \"123\",\r\n    \"wb*\",\r\n    \"wq*\",\r\n    \"html\",\r\n    \"htm\"\r\n  ]\r\n    .map(function(x) {\r\n      return \".\" + x;\r\n    })\r\n    .join(\",\");\r\n  \r\n  /* generate an array of column objects */\r\n  const make_cols = refstr => {\r\n    let o = [],\r\n      C = XLSX.utils.decode_range(refstr).e.c + 1;\r\n    for (var i = 0; i < C; ++i) o[i] = { name: XLSX.utils.encode_col(i), key: i };\r\n    return o;\r\n  };\r\n  \r\nexport default ImportData;"]},"metadata":{},"sourceType":"module"}