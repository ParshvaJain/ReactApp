{"ast":null,"code":"var _jsxFileName = \"D:\\\\stock-chart\\\\src\\\\Components\\\\ManageCompany\\\\ManageCompany.js\";\nimport React, { Component } from 'react';\nimport './ManageCompany.css';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport NavWithDropDown from '../NavBar';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CreateCompanyForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: '',\n      color: ''\n    };\n    this.createCompany = this.createCompany.bind(this);\n    this.sendRequest = this.sendRequest.bind(this);\n  }\n\n  createCompany(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var name = document.getElementById(\"formCompanyName\").value;\n    var turnover = document.getElementById(\"formTurnover\").value;\n    var ceo = document.getElementById(\"formCeo\").value;\n    var bod = document.getElementById(\"formBoardOfDirectors\").value;\n    var exchanges = document.getElementById(\"formExchanges\").value;\n    var sector = document.getElementById(\"formSector\").value;\n    var brief = doument.getElementById(\"formBrief\").value;\n    var exchangeToCode = document.getElementById(\"formETC\").value;\n    console.log(exchangeToCode);\n    exchanges = exchanges.split(\",\");\n    bod = bod.split(\",\");\n    this.sendRequest(name, turnover, ceo, bod, exchanges, sector, brief, exchangeToCode);\n  }\n\n  sendRequest(name, turnover, ceo, bod, exchanges, sector, brief, exchangeToCode) {\n    var jsonBody = {\n      \"companyName\": name,\n      \"turnover\": turnover,\n      \"ceo\": ceo,\n      \"boardOfDirectors\": bod,\n      \"listedInExchanges\": exchanges,\n      \"sector\": sector,\n      \"brief\": brief,\n      \"exchangeToCode\": exchangeToCode\n    };\n    var requestOptions = {\n      method: 'POST',\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(jsonBody),\n      referrerPolicy: \"no-referrer\"\n    };\n    this.setState(() => {\n      fetch('http://localhost:8082/company/create', requestOptions).then(response => {\n        if (response.status === 200) {\n          this.setState({\n            message: \"New Company created \",\n            color: \"green\"\n          });\n          return response.json();\n        } else {\n          this.setState({\n            message: \"Error creating Company!\",\n            color: \"red\"\n          });\n        }\n\n        return null;\n      }).then(data => {\n        if (data != null) {\n          setTimeout(() => {\n            this.props.history.push(\"/adminHome\");\n          }, 2000);\n        }\n      });\n    });\n  }\n\n  render() {\n    var messagestyle = {\n      fontSize: '16px',\n      color: this.state.color\n    };\n    return /*#__PURE__*/_jsxDEV(Form, {\n      className: \"justify-content-center\",\n      onSubmit: this.createCompany,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formCompanyName\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Company Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          placeholder: \"Company name\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formTurnover\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Turnover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter Turnover in Crores\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formCeo\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"CEO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter CEO\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formBoardOfDirectors\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Board Of Directors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter directors in comma seperated\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formExchanges\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Exchanges\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter exchanges in comma seperated\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formSector\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Sector\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter Sector\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formBrief\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Brief\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter Brief\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formETC\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Exchange To Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter Code for each exchange\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Create Company\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: messagestyle,\n            children: this.state.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass EditCompanyForm extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass CompanyCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      updateForm: false\n    };\n  }\n\n  render() {\n    var exchanges = this.props.exchanges;\n    var companyExchange = exchanges.toString();\n    return /*#__PURE__*/_jsxDEV(Card, {\n      bg: \"white\",\n      id: \"each-card-company\",\n      text: \"black\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: this.props.companyName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              md: \"3\",\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                children: \"Sector\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                children: \"Listed in Exchanges\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                children: \"TurnOver\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              md: \"3\",\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                children: this.props.sector\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                children: companyExchange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                children: this.props.turnover\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          id: \"edit-details-company\",\n          variant: \"primary\",\n          children: \"Edit Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass ManageCompany extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      createForm: false,\n      updateForm: false,\n      companyId: ''\n    };\n    this.DisplayData = this.DisplayData.bind(this);\n    this.CreateCompanyForm = this.CreateCompanyForm.bind(this);\n    this.UpdateCompanyForm = this.UpdateCompanyForm.bind(this);\n  }\n\n  DisplayData() {\n    var CompanyCardList = [];\n    var data = this.state.data;\n\n    for (var i = 0; i < data.length; i++) {\n      var companyBanner = /*#__PURE__*/_jsxDEV(CompanyCard, {\n        companyId: data[i].id,\n        companyName: data[i].companyName,\n        ceo: data[i].ceo,\n        turnover: data[i].turnover,\n        BOD: data[i].boardOfDirectors,\n        exchanges: data[i].listedInExchanges,\n        sector: data[i].sector,\n        brief: data[i].brief,\n        exchangeToCode: data[i].exchangeToCode //UpdateIPOForm={this.UpdateIPOForm}\n\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 33\n      }, this);\n\n      CompanyCardList.push(companyBanner);\n    }\n\n    return CompanyCardList;\n  }\n\n  CreateCompanyForm() {\n    this.setState({\n      createForm: true,\n      updateForm: false\n    });\n  }\n\n  UpdateCompanyForm(event, companyId) {\n    this.setState({\n      createForm: false,\n      updateForm: true,\n      companyId: companyId\n    });\n  }\n\n  componentDidMount() {\n    console.log(\"token\" + this.props.getAuthToken());\n    var requestOptions = {\n      method: 'GET',\n      headers: {\n        \"Authorization\": \"Bearer \" + this.props.getAuthToken()\n      }\n    };\n    fetch(\"http://localhost:8082/company/\", requestOptions).then(response => response.json()).then(data => {\n      this.setState({\n        data: data\n      });\n    });\n  }\n\n  render() {\n    let form;\n\n    if (this.state.createForm === true) {\n      form = /*#__PURE__*/_jsxDEV(CreateCompanyForm, { ...this.props,\n        history: this.props.history\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 20\n      }, this);\n    } else {\n      if (this.state.updateForm === true) {\n        form = /*#__PURE__*/_jsxDEV(EditCompanyForm, { ...this.props,\n          history: this.props.history,\n          companyId: this.state.companyId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 24\n        }, this);\n      } else {\n        form = /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.CreateCompanyForm,\n          id: \"add-new-company\",\n          variant: \"primary\",\n          children: \"Add New Company\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 24\n        }, this);\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NavWithDropDown, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        md: \"2\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"ipo-company\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              id: \"main-card-company\",\n              children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                id: \"card-header-company\",\n                children: \"Listed Companies\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                id: \"card-body-company\",\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(Row, {\n                    md: \"1\",\n                    children: this.DisplayData()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 300,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"form-company\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              id: \"form-card-company\",\n              children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                children: this.state.createForm == true ? 'Create New IPO' : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                id: \"form-body-company\",\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  md: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ManageCompany;","map":{"version":3,"sources":["D:/stock-chart/src/Components/ManageCompany/ManageCompany.js"],"names":["React","Component","Container","Form","Button","NavWithDropDown","Card","Row","Col","CreateCompanyForm","constructor","props","state","message","color","createCompany","bind","sendRequest","event","preventDefault","stopPropagation","name","document","getElementById","value","turnover","ceo","bod","exchanges","sector","brief","doument","exchangeToCode","console","log","split","jsonBody","requestOptions","method","mode","headers","body","JSON","stringify","referrerPolicy","setState","fetch","then","response","status","json","data","setTimeout","history","push","render","messagestyle","fontSize","EditCompanyForm","CompanyCard","updateForm","companyExchange","toString","companyName","ManageCompany","createForm","companyId","DisplayData","UpdateCompanyForm","CompanyCardList","i","length","companyBanner","id","boardOfDirectors","listedInExchanges","componentDidMount","getAuthToken","form"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './ManageCompany.css';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport NavWithDropDown from '../NavBar';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nclass CreateCompanyForm extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            message : '',\r\n            color : ''\r\n        }\r\n        this.createCompany = this.createCompany.bind(this);\r\n        this.sendRequest = this.sendRequest.bind(this);\r\n    }\r\n\r\n    createCompany(event) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        var name = document.getElementById(\"formCompanyName\").value;\r\n        var turnover = document.getElementById(\"formTurnover\").value;\r\n        var ceo = document.getElementById(\"formCeo\").value;\r\n        var bod = document.getElementById(\"formBoardOfDirectors\").value;\r\n        var exchanges = document.getElementById(\"formExchanges\").value;\r\n        var sector = document.getElementById(\"formSector\").value;\r\n        var brief = doument.getElementById(\"formBrief\").value;\r\n        var exchangeToCode = document.getElementById(\"formETC\").value;\r\n        console.log(exchangeToCode);\r\n        exchanges = exchanges.split(\",\");\r\n        bod = bod.split(\",\");\r\n        this.sendRequest(name,turnover,ceo,bod,exchanges,sector,brief,exchangeToCode);\r\n    }\r\n\r\n    sendRequest(name,turnover,ceo,bod,exchanges,sector,brief,exchangeToCode){\r\n       \r\n        var jsonBody = {\r\n            \"companyName\" : name,\r\n            \"turnover\" : turnover,\r\n            \"ceo\" : ceo,\r\n            \"boardOfDirectors\" : bod,\r\n            \"listedInExchanges\" : exchanges,\r\n            \"sector\" : sector,\r\n            \"brief\" : brief,\r\n            \"exchangeToCode\" : exchangeToCode\r\n        }\r\n\r\n        var requestOptions = {\r\n            method : 'POST',\r\n            mode : 'cors',\r\n            headers: {'Content-Type':'application/json'},\r\n            body : JSON.stringify(jsonBody),\r\n            referrerPolicy:\"no-referrer\",\r\n        }\r\n        this.setState(() => {\r\n            fetch('http://localhost:8082/company/create',requestOptions)\r\n            .then(response => {\r\n                if(response.status  === 200) {\r\n                    this.setState({\r\n                        message : \"New Company created \",\r\n                        color : \"green\"\r\n                    })\r\n                    return response.json();\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        message:\"Error creating Company!\",\r\n                        color:\"red\"\r\n                    })\r\n                }\r\n                return null;\r\n            }).then(data => {\r\n                if(data != null){\r\n                    setTimeout(() => {\r\n                        this.props.history.push(\"/adminHome\");\r\n                    },2000);     \r\n                }\r\n            })\r\n        })      \r\n    }\r\n\r\n    render(){\r\n        \r\n        var messagestyle = {\r\n            fontSize : '16px',\r\n            color : this.state.color\r\n        }\r\n\r\n        return(\r\n            <Form className=\"justify-content-center\" onSubmit={this.createCompany}>\r\n                        <Form.Group controlId=\"formCompanyName\">\r\n                        <Form.Label>Company Name</Form.Label>\r\n                            <Form.Control placeholder=\"Company name\"  required/>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formTurnover\">\r\n                            <Form.Label>Turnover</Form.Label>\r\n                            <Form.Control  type=\"text\" placeholder=\"Enter Turnover in Crores\" required />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formCeo\">\r\n                            <Form.Label>CEO</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Enter CEO\" required />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formBoardOfDirectors\">\r\n                            <Form.Label>Board Of Directors</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Enter directors in comma seperated\" required />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formExchanges\">\r\n                            <Form.Label>Exchanges</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Enter exchanges in comma seperated\" required />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formSector\">\r\n                            <Form.Label>Sector</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Enter Sector\" required />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formBrief\">\r\n                            <Form.Label>Brief</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Enter Brief\" required />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formETC\">\r\n                            <Form.Label>Exchange To Code</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Enter Code for each exchange\" required />\r\n                        </Form.Group>\r\n\r\n                        <br></br>\r\n                        <br></br>\r\n                        <Row>\r\n                            <Col>\r\n                                <Button variant=\"primary\" type=\"submit\">\r\n                                Create Company\r\n                                </Button>\r\n                            </Col>\r\n                            \r\n                            <Col>\r\n                                <span style={messagestyle}>{this.state.message}</span>\r\n                            </Col>\r\n                        </Row>\r\n                     \r\n                    </Form>\r\n        );\r\n    }\r\n}\r\n\r\nclass EditCompanyForm extends Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <h1>Edit</h1>\r\n        );\r\n    }\r\n}\r\n\r\nclass CompanyCard extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            updateForm : false\r\n        }\r\n    }\r\n\r\n    render(){\r\n        var exchanges = this.props.exchanges;\r\n        var companyExchange = exchanges.toString();\r\n        return(\r\n            <Card bg=\"white\" id=\"each-card-company\" text=\"black\">\r\n                        <Card.Header>{this.props.companyName}</Card.Header>\r\n                        <Card.Body>\r\n                        <Card.Text>\r\n                            <Container>\r\n                            <Row md=\"3\">\r\n                                <Col>\r\n                                    Sector\r\n                                </Col>\r\n                                <Col>\r\n                                    Listed in Exchanges\r\n                                </Col>\r\n                                <Col>\r\n                                    TurnOver\r\n                                </Col> \r\n                            </Row>\r\n                            <br></br>\r\n                            <Row md=\"3\">\r\n                                <Col>\r\n                                    {this.props.sector}\r\n                                </Col>\r\n                                <Col>\r\n                                    {companyExchange}\r\n                                </Col>\r\n                                <Col>\r\n                                    {this.props.turnover}\r\n                                </Col> \r\n                            </Row>\r\n                            </Container>    \r\n                        </Card.Text>\r\n                        <Button id=\"edit-details-company\" variant=\"primary\">Edit Details</Button>\r\n                        </Card.Body>\r\n                    </Card>\r\n        );\r\n    }\r\n}\r\nclass ManageCompany extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            data : [],\r\n            createForm : false,\r\n            updateForm : false,\r\n            companyId : ''\r\n        }\r\n        this.DisplayData = this.DisplayData.bind(this);\r\n        this.CreateCompanyForm = this.CreateCompanyForm.bind(this);\r\n        this.UpdateCompanyForm = this.UpdateCompanyForm.bind(this);\r\n    }\r\n\r\n    DisplayData(){\r\n        var CompanyCardList = [];\r\n        var data = this.state.data;\r\n        for(var i = 0; i < data.length; i++) {\r\n            var companyBanner = <CompanyCard key={i}\r\n                                             companyId={data[i].id}\r\n                                             companyName={data[i].companyName}\r\n                                             ceo={data[i].ceo}\r\n                                             turnover={data[i].turnover}\r\n                                             BOD={data[i].boardOfDirectors}\r\n                                             exchanges={data[i].listedInExchanges}\r\n                                             sector={data[i].sector}\r\n                                             brief={data[i].brief}\r\n                                             exchangeToCode={data[i].exchangeToCode}\r\n                                             //UpdateIPOForm={this.UpdateIPOForm}\r\n                                             />\r\n            CompanyCardList.push(companyBanner);\r\n        }\r\n        return CompanyCardList;\r\n    }\r\n\r\n    CreateCompanyForm(){\r\n        this.setState({createForm : true,updateForm : false});\r\n    }\r\n\r\n    UpdateCompanyForm(event,companyId){\r\n        this.setState({createForm : false,updateForm : true,companyId : companyId});\r\n    }\r\n\r\n    componentDidMount(){\r\n        console.log(\"token\" + this.props.getAuthToken());\r\n        var requestOptions = {\r\n            method : 'GET',\r\n            headers : {\"Authorization\" : \"Bearer \" + this.props.getAuthToken() }\r\n        }\r\n        fetch(\"http://localhost:8082/company/\",requestOptions)\r\n        .then(response =>  response.json())\r\n        .then(data => {\r\n            this.setState({data : data});\r\n        })\r\n    }\r\n\r\n    render(){\r\n\r\n        let form;\r\n        if(this.state.createForm === true){\r\n            form = <CreateCompanyForm {...this.props}  history={this.props.history}/>;\r\n        }\r\n        else{\r\n            if(this.state.updateForm === true){\r\n                form = <EditCompanyForm {...this.props}  history={this.props.history} companyId = {this.state.companyId}/>;\r\n            }\r\n            else{\r\n                form = <Button onClick={this.CreateCompanyForm} id=\"add-new-company\" variant=\"primary\">Add New Company</Button>;\r\n            }\r\n        }\r\n\r\n        return(\r\n            <React.Fragment>\r\n                <NavWithDropDown />\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <Row md=\"2\">\r\n                <Col>\r\n                <div id=\"ipo-company\">\r\n                    <Card id=\"main-card-company\">\r\n                        <Card.Header id=\"card-header-company\">Listed Companies</Card.Header>\r\n                        <Card.Body id=\"card-body-company\">\r\n                            <Col>\r\n                            <Row md=\"1\">\r\n                                {this.DisplayData()}\r\n                            </Row>\r\n                            </Col>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n                </Col>\r\n\r\n                <Col>\r\n                <div id=\"form-company\">\r\n                    <Card id=\"form-card-company\">\r\n                    <Card.Header>{this.state.createForm == true ? 'Create New IPO' : ''}</Card.Header>\r\n                        <Card.Body id=\"form-body-company\">\r\n                            <Row md=\"1\">   \r\n                            \r\n                            </Row>\r\n                            \r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n                </Col>\r\n                </Row>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ManageCompany;"]},"metadata":{},"sourceType":"module"}