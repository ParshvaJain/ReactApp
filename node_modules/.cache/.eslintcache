[{"D:\\stock-chart\\src\\index.js":"1","D:\\stock-chart\\src\\App.js":"2","D:\\stock-chart\\src\\Components\\LoginPage\\LoginPage.js":"3","D:\\stock-chart\\src\\Components\\SignUpPage\\SignupPage.js":"4","D:\\stock-chart\\src\\Components\\AdminHome\\AdminHome.js":"5","D:\\stock-chart\\src\\Components\\UserHome\\UserHome.js":"6","D:\\stock-chart\\src\\Components\\ManageExchange\\ManageExchange.js":"7","D:\\stock-chart\\src\\Components\\ImportData\\ImportData.js":"8","D:\\stock-chart\\src\\Components\\ManageCompany\\ManageCompany.js":"9","D:\\stock-chart\\src\\Components\\ManageIPO\\ManageIPO.js":"10","D:\\stock-chart\\src\\Components\\NavBar.js":"11","D:\\stock-chart\\src\\Components\\UpdateProfile\\UpdateProfile.js":"12","D:\\stock-chart\\src\\Components\\ViewCompany\\ViewCompany.js":"13","D:\\stock-chart\\src\\Components\\UserNavBar.js":"14","D:\\stock-chart\\src\\Components\\UpcomingIPO\\UpcomingIPO.js":"15","D:\\stock-chart\\src\\Components\\CompareCompany\\CompareCompany.js":"16","D:\\stock-chart\\src\\Components\\CompareSector\\CompareSector.js":"17","D:\\Final-Backup\\stock-chart\\src\\index.js":"18","D:\\Final-Backup\\stock-chart\\src\\App.js":"19","D:\\Final-Backup\\stock-chart\\src\\Components\\ImportData\\ImportData.js":"20","D:\\Final-Backup\\stock-chart\\src\\Components\\UserHome\\UserHome.js":"21","D:\\Final-Backup\\stock-chart\\src\\Components\\SignUpPage\\SignupPage.js":"22","D:\\Final-Backup\\stock-chart\\src\\Components\\LoginPage\\LoginPage.js":"23","D:\\Final-Backup\\stock-chart\\src\\Components\\ManageCompany\\ManageCompany.js":"24","D:\\Final-Backup\\stock-chart\\src\\Components\\ManageIPO\\ManageIPO.js":"25","D:\\Final-Backup\\stock-chart\\src\\Components\\AdminHome\\AdminHome.js":"26","D:\\Final-Backup\\stock-chart\\src\\Components\\UpcomingIPO\\UpcomingIPO.js":"27","D:\\Final-Backup\\stock-chart\\src\\Components\\UpdateProfile\\UpdateProfile.js":"28","D:\\Final-Backup\\stock-chart\\src\\Components\\ManageExchange\\ManageExchange.js":"29","D:\\Final-Backup\\stock-chart\\src\\Components\\ViewCompany\\ViewCompany.js":"30","D:\\Final-Backup\\stock-chart\\src\\Components\\CompareSector\\CompareSector.js":"31","D:\\Final-Backup\\stock-chart\\src\\Components\\CompareCompany\\CompareCompany.js":"32","D:\\Final-Backup\\stock-chart\\src\\Components\\NavBar.js":"33","D:\\Final-Backup\\stock-chart\\src\\Components\\UserNavBar.js":"34"},{"size":331,"mtime":1623321642063,"results":"35","hashOfConfig":"36"},{"size":4193,"mtime":1624174820761,"results":"37","hashOfConfig":"36"},{"size":4588,"mtime":1623909671484,"results":"38","hashOfConfig":"36"},{"size":6270,"mtime":1623410339101,"results":"39","hashOfConfig":"36"},{"size":6531,"mtime":1623928525267,"results":"40","hashOfConfig":"36"},{"size":5760,"mtime":1623928486768,"results":"41","hashOfConfig":"36"},{"size":9315,"mtime":1623839977530,"results":"42","hashOfConfig":"36"},{"size":6829,"mtime":1623929512820,"results":"43","hashOfConfig":"36"},{"size":19115,"mtime":1623909753333,"results":"44","hashOfConfig":"36"},{"size":16621,"mtime":1623747164094,"results":"45","hashOfConfig":"36"},{"size":1575,"mtime":1623911709965,"results":"46","hashOfConfig":"36"},{"size":6001,"mtime":1623915195717,"results":"47","hashOfConfig":"36"},{"size":4969,"mtime":1623928410943,"results":"48","hashOfConfig":"36"},{"size":1510,"mtime":1623911759850,"results":"49","hashOfConfig":"36"},{"size":4876,"mtime":1623839936552,"results":"50","hashOfConfig":"36"},{"size":13000,"mtime":1624207589563,"results":"51","hashOfConfig":"36"},{"size":12414,"mtime":1624196271786,"results":"52","hashOfConfig":"36"},{"size":331,"mtime":1623321642063,"results":"53","hashOfConfig":"54"},{"size":4193,"mtime":1624174820761,"results":"55","hashOfConfig":"54"},{"size":6849,"mtime":1624268801940,"results":"56","hashOfConfig":"54"},{"size":5776,"mtime":1624344807857,"results":"57","hashOfConfig":"54"},{"size":6294,"mtime":1624269153412,"results":"58","hashOfConfig":"54"},{"size":4619,"mtime":1624351269475,"results":"59","hashOfConfig":"54"},{"size":19201,"mtime":1624351212383,"results":"60","hashOfConfig":"54"},{"size":16699,"mtime":1624351244830,"results":"61","hashOfConfig":"54"},{"size":6548,"mtime":1624268460458,"results":"62","hashOfConfig":"54"},{"size":4893,"mtime":1624269184191,"results":"63","hashOfConfig":"54"},{"size":6049,"mtime":1624269218155,"results":"64","hashOfConfig":"54"},{"size":9361,"mtime":1624269023753,"results":"65","hashOfConfig":"54"},{"size":4986,"mtime":1624269275487,"results":"66","hashOfConfig":"54"},{"size":12490,"mtime":1624268735736,"results":"67","hashOfConfig":"54"},{"size":13100,"mtime":1624268634317,"results":"68","hashOfConfig":"54"},{"size":1581,"mtime":1624346496726,"results":"69","hashOfConfig":"54"},{"size":1510,"mtime":1623911759850,"results":"70","hashOfConfig":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},"vz2832",{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"y6mtht",{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"108"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"D:\\stock-chart\\src\\index.js",[],["142","143"],"D:\\stock-chart\\src\\App.js",[],"D:\\stock-chart\\src\\Components\\LoginPage\\LoginPage.js",[],"D:\\stock-chart\\src\\Components\\SignUpPage\\SignupPage.js",[],"D:\\stock-chart\\src\\Components\\AdminHome\\AdminHome.js",[],"D:\\stock-chart\\src\\Components\\UserHome\\UserHome.js",[],"D:\\stock-chart\\src\\Components\\ManageExchange\\ManageExchange.js",[],"D:\\stock-chart\\src\\Components\\ImportData\\ImportData.js",[],"D:\\stock-chart\\src\\Components\\ManageCompany\\ManageCompany.js",[],"D:\\stock-chart\\src\\Components\\ManageIPO\\ManageIPO.js",[],"D:\\stock-chart\\src\\Components\\NavBar.js",[],"D:\\stock-chart\\src\\Components\\UpdateProfile\\UpdateProfile.js",[],"D:\\stock-chart\\src\\Components\\ViewCompany\\ViewCompany.js",[],"D:\\stock-chart\\src\\Components\\UserNavBar.js",[],"D:\\stock-chart\\src\\Components\\UpcomingIPO\\UpcomingIPO.js",[],"D:\\stock-chart\\src\\Components\\CompareCompany\\CompareCompany.js",["144","145","146"],"D:\\stock-chart\\src\\Components\\CompareSector\\CompareSector.js",[],"D:\\Final-Backup\\stock-chart\\src\\index.js",[],["147","148"],"D:\\Final-Backup\\stock-chart\\src\\App.js",[],"D:\\Final-Backup\\stock-chart\\src\\Components\\ImportData\\ImportData.js",[],"D:\\Final-Backup\\stock-chart\\src\\Components\\UserHome\\UserHome.js",[],"D:\\Final-Backup\\stock-chart\\src\\Components\\SignUpPage\\SignupPage.js",[],"D:\\Final-Backup\\stock-chart\\src\\Components\\LoginPage\\LoginPage.js",[],"D:\\Final-Backup\\stock-chart\\src\\Components\\ManageCompany\\ManageCompany.js",[],"D:\\Final-Backup\\stock-chart\\src\\Components\\ManageIPO\\ManageIPO.js",[],"D:\\Final-Backup\\stock-chart\\src\\Components\\AdminHome\\AdminHome.js",[],"D:\\Final-Backup\\stock-chart\\src\\Components\\UpcomingIPO\\UpcomingIPO.js",[],"D:\\Final-Backup\\stock-chart\\src\\Components\\UpdateProfile\\UpdateProfile.js",[],"D:\\Final-Backup\\stock-chart\\src\\Components\\ManageExchange\\ManageExchange.js",[],"D:\\Final-Backup\\stock-chart\\src\\Components\\ViewCompany\\ViewCompany.js",[],"D:\\Final-Backup\\stock-chart\\src\\Components\\CompareSector\\CompareSector.js",[],"D:\\Final-Backup\\stock-chart\\src\\Components\\CompareCompany\\CompareCompany.js",["149","150","151"],"import React, { Component } from 'react';\r\nimport './CompareCompany.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport {Button,Form} from 'react-bootstrap';\r\nimport NavWithDropDownUser from '../UserNavBar';\r\nimport {Row,Col} from 'react-bootstrap';\r\nimport FusionCharts from \"fusioncharts\";\r\nimport charts from \"fusioncharts/fusioncharts.charts\";\r\nimport ReactFusioncharts from \"react-fusioncharts\";\r\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\r\nimport excelImport from 'fusioncharts/fusioncharts.excelexport';\r\nimport ReactFC from 'react-fusioncharts';\r\nimport Column2D from 'react-fusioncharts';\r\n\r\n\r\nFusionTheme(FusionCharts);\r\ncharts(FusionCharts);\r\n\r\n//ReactFC.fcRoot(FusionCharts, Column2D, FusionTheme,excelImport);\r\nclass CompareCompany extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            data : [],\r\n            exchangeData : [],\r\n            exchangeSelected : '',\r\n            companySelected : '',\r\n            fromPeriod : '',\r\n            toPeriod : '',\r\n            periodicity : '',\r\n            dataFormatChart : [],\r\n            addButtonClicked : false,\r\n            secondCompanySelected : '',\r\n            category : [],\r\n            companyValue1 : [],\r\n            companyValue2 : []\r\n        }\r\n        this.generateMap = this.generateMap.bind(this);\r\n        this.addNewForm = this.addNewForm.bind(this);\r\n    }\r\n\r\n    addNewForm(){\r\n        this.setState({addButtonClicked : true});\r\n    }\r\n\r\n    componentDidMount(){\r\n        \r\n        var requestOptions = {\r\n            method : 'GET',\r\n            headers : {\"Authorization\" : \"Bearer \" + this.props.getAuthToken() }\r\n        }\r\n\r\n        Promise.all([\r\n            fetch(\"https://company--service.herokuapp.com/company/getCompanies\",requestOptions),\r\n            fetch(\"https://stockexchange--service.herokuapp.com/stockexchange/getNames\",requestOptions)\r\n        ])\r\n        .then(([res1,res2]) => {\r\n            return Promise.all([res1.json(),res2.json()])\r\n        })\r\n        .then(([res1,res2]) => {\r\n            this.setState({\r\n                data : res1,\r\n                exchangeData : res2\r\n            })\r\n        })\r\n    }\r\n\r\n    generateMap(e){\r\n        e.preventDefault();\r\n        if(this.state.secondCompanySelected === ''){\r\n        var jsonBody = {\r\n            \"exchange\" : this.state.exchangeSelected,\r\n            \"company\" : this.state.companySelected,\r\n            \"fromPeriod\" : this.state.fromPeriod,\r\n            \"toPeriod\" : this.state.toPeriod,\r\n            \"periodicity\" : this.state.periodicity\r\n        }\r\n\r\n        var requestOptions = {\r\n            method : 'POST',\r\n            headers : {\"Content-Type\":\"application/json\" },\r\n            body : JSON.stringify(jsonBody)            \r\n        }\r\n\r\n        fetch('https://stockprice--service.herokuapp.com/excel/getCompaniesByDate',requestOptions)\r\n        .then(res => {\r\n            if(res.status === 200){\r\n                return res.json();\r\n            }\r\n            else{\r\n                console.log(res.status);\r\n            }\r\n            return null;\r\n        })\r\n        .then(data => {\r\n            if(data != null){\r\n                console.log(data);\r\n                let dataChart = [];\r\n                var length = data.length;\r\n                for(var i = 0;i<length;i++){\r\n                    let price = data[i].currentPrice;\r\n                    let date = data[i].date;\r\n                    let tempObj = {\r\n                        \"label\" : date,\r\n                        \"value\" : price\r\n                    }\r\n\r\n                    dataChart.push(tempObj);\r\n                }\r\n                console.log(dataChart);\r\n                this.setState({\r\n                    dataFormatChart : dataChart,\r\n                    addButtonClicked : false\r\n                })\r\n            }\r\n        })\r\n    } \r\n    else \r\n    {\r\n        var jsonBody1 = {\r\n            \"exchange\" : this.state.exchangeSelected,\r\n            \"company\" : this.state.companySelected,\r\n            \"fromPeriod\" : this.state.fromPeriod,\r\n            \"toPeriod\" : this.state.toPeriod,\r\n            \"periodicity\" : this.state.periodicity\r\n        }\r\n\r\n        var jsonBody2 = {\r\n            \"exchange\" : this.state.exchangeSelected,\r\n            \"company\" : this.state.secondCompanySelected,\r\n            \"fromPeriod\" : this.state.fromPeriod,\r\n            \"toPeriod\" : this.state.toPeriod,\r\n            \"periodicity\" : this.state.periodicity\r\n        }\r\n\r\n        var requestOptions1 = {\r\n            method : 'POST',\r\n            headers : {\"Content-Type\":\"application/json\" },\r\n            body : JSON.stringify(jsonBody1)            \r\n        }\r\n\r\n        var requestOptions2 = {\r\n            method : 'POST',\r\n            headers : {\"Content-Type\":\"application/json\" },\r\n            body : JSON.stringify(jsonBody2)            \r\n        }\r\n\r\n        Promise.all([\r\n            fetch(\"https://stockprice--service.herokuapp.com/excel/getCompaniesByDate\",requestOptions1),\r\n            fetch(\"https://stockprice--service.herokuapp.com/excel/getCompaniesByDate\",requestOptions2)\r\n        ])\r\n        .then(([res1,res2]) => {\r\n            return Promise.all([res1.json(),res2.json()])\r\n        })\r\n        .then(([res1,res2]) => {\r\n            if(res1 != null && res2 != null){\r\n                console.log(res1);\r\n                console.log(res2);\r\n                let category = [];\r\n                let companyValue1 = [];\r\n                let companyValue2 = [];\r\n                var length = res1.length;\r\n                for(var i=0;i<length;i++){\r\n                    let date = res1[i].date;\r\n                    let price1 = res1[i].currentPrice;\r\n                    let price2 = res2[i].currentPrice;\r\n\r\n                    let tempObj = {\r\n                        \"label\" :  date\r\n                    }\r\n                    let comp1Obj = {\r\n                        \"value\" : price1\r\n                    }\r\n                    let comp2Obj = {\r\n                        \"value\" : price2\r\n                    }\r\n                    category.push(tempObj);\r\n                    companyValue1.push(comp1Obj);\r\n                    companyValue2.push(comp2Obj);\r\n                }\r\n\r\n                this.setState({\r\n                    category : category,\r\n                    companyValue1 : companyValue1,\r\n                    companyValue2 :companyValue2\r\n                })\r\n            }\r\n        })\r\n\r\n    }\r\n    }\r\n\r\n    render(){\r\n        const dataSource = {\r\n            chart : {\r\n                caption : \"Stock Market Price\",\r\n                exportEnabled: \"1\",\r\n                exportMode: \"client\",\r\n                yaxisname : \"Price\",\r\n                numberprefix: \"Rs.\",\r\n                rotatelabels: \"1\",\r\n                setadaptiveymin:\"1\",\r\n                theme:\"fusion\"\r\n            },\r\n            data : this.state.dataFormatChart\r\n        };\r\n\r\n        const dataSource2Companies = {\r\n            chart: {\r\n                caption : \"Comparison of 2 Companies over time\",\r\n                exportEnabled: \"1\",\r\n                exportMode: \"client\",\r\n                yaxisname : \"Price\",\r\n                numberprefix : \"Rs.\",\r\n                showhovereffect: \"1\",\r\n                theme : \"fusion\"\r\n            },\r\n            categories : [\r\n                {\r\n                    category : this.state.category\r\n                }\r\n            ],\r\n            dataset : [\r\n                {\r\n                    seriesname : this.state.companySelected,\r\n                    data : this.state.companyValue1\r\n                },\r\n                {\r\n                    seriesname : this.state.secondCompanySelected,\r\n                    data : this.state.companyValue2\r\n                }\r\n            ]\r\n        };\r\n\r\n        return(\r\n            <React.Fragment>\r\n                <NavWithDropDownUser />\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <Row>\r\n                <div id=\"compare-main-div\">\r\n                <Card id=\"select-form-cc\">\r\n                <Card.Header id=\"header-cc\">Compare Companies</Card.Header>\r\n                <Card.Body>\r\n                    <Col>\r\n                    <Form>\r\n                        <br></br>\r\n                        <Form.Group>\r\n                            <Form.Label id=\"select-c-s\">Select Stock Exchange</Form.Label>\r\n                            <select  onChange={e => this.setState({exchangeSelected : e.target.value})} name=\"exchange\" id=\"exchange\">\r\n                            {this.state.exchangeData.map(exchange => (\r\n                            <option key={exchange} value={exchange}>\r\n                                {exchange}\r\n                            </option>\r\n                            ))}\r\n                            </select>\r\n                        </Form.Group>\r\n                                <br></br>\r\n                        <Form.Group>\r\n                            <Form.Label>Enter Company</Form.Label>\r\n                            <input onChange={e => this.setState({companySelected : e.target.value})} type=\"text\" id=\"select-c\" placeholder=\"Enter Company name\" />\r\n                        </Form.Group>\r\n                        <br></br>\r\n                        <Row md=\"2\">\r\n                            <Form.Group>\r\n                                <Form.Label id=\"from-period\">From Period</Form.Label>\r\n                                <input onChange={e => this.setState({fromPeriod : e.target.value})} id=\"select-d\" type=\"date\"/>\r\n                            </Form.Group>\r\n                            \r\n                            <Form.Group>\r\n                                <Form.Label>To Period</Form.Label>\r\n                                <input onChange={e => this.setState({toPeriod : e.target.value})} id=\"select-d\" type=\"date\"/>\r\n                            </Form.Group>\r\n                        </Row>\r\n                        \r\n                        <br></br>\r\n                        <Row md=\"2\">\r\n                        <Col>\r\n                        <Form.Group>\r\n                            <Form.Label id=\"select-p\">Select Periodicity</Form.Label>\r\n                            <select onChange={e => this.setState({periodicity : e.target.value})} name=\"period\" id=\"period\">\r\n                                <option key=\"weekly\" value=\"weekly\">Weekly</option>\r\n                                <option key=\"monthly\" value=\"monthly\">Monthly</option>\r\n                                <option key=\"quarterly\" value=\"quarterly\">Quarterly</option>\r\n                                <option key=\"yearly\" value=\"yearly\">Yearly</option>\r\n                            </select> \r\n                        </Form.Group>\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Label> Click to add company</Form.Label>\r\n                            {this.state.addButtonClicked === false ? <Button onClick={this.addNewForm}id=\"add-button\" variant=\"primary\"> + </Button> \r\n                            : \r\n                            <input type=\"text\" onChange={e => this.setState({secondCompanySelected : e.target.value})} placeholder=\"Enter new company name\" />}\r\n                            \r\n                        </Col> \r\n                        </Row>\r\n                        \r\n                        \r\n                        \r\n                        <Button onClick={this.generateMap} variant=\"primary\" id=\"generate\" type=\"submit\">\r\n                            Generate Chart\r\n                        </Button>\r\n                        \r\n                    </Form>\r\n                    </Col>   \r\n                </Card.Body>\r\n            \r\n                </Card>\r\n                </div>\r\n\r\n                <div id=\"chart\">\r\n                    <Card id=\"chart-display\">\r\n                        <Card.Header id=\"chart-header\"> Chart</Card.Header>\r\n                        <Card.Body id=\"chart-body\">\r\n                            {this.state.secondCompanySelected === '' ? \r\n                            <ReactFusioncharts\r\n                                id=\"fusionCharts\"\r\n                                type=\"line\"\r\n                                width=\"100%\"\r\n                                height=\"100%\"\r\n                                dataFormat=\"JSON\"\r\n\r\n                                dataSource={dataSource}\r\n                                />\r\n                            :\r\n                            <ReactFusioncharts\r\n                                type=\"msline\"\r\n                                width=\"100%\"\r\n                                height=\"100%\"\r\n                                dataFormat=\"JSON\"\r\n                                dataSource={dataSource2Companies}\r\n                                />\r\n                            }\r\n                                 \r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n            </Row>\r\n\r\n            </React.Fragment>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default CompareCompany;","D:\\Final-Backup\\stock-chart\\src\\Components\\NavBar.js",[],"D:\\Final-Backup\\stock-chart\\src\\Components\\UserNavBar.js",[],{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","severity":1,"message":"157","line":11,"column":8,"nodeType":"158","messageId":"159","endLine":11,"endColumn":19},{"ruleId":"156","severity":1,"message":"160","line":12,"column":8,"nodeType":"158","messageId":"159","endLine":12,"endColumn":15},{"ruleId":"156","severity":1,"message":"161","line":13,"column":8,"nodeType":"158","messageId":"159","endLine":13,"endColumn":16},{"ruleId":"152","replacedBy":"162"},{"ruleId":"154","replacedBy":"163"},{"ruleId":"156","severity":1,"message":"157","line":11,"column":8,"nodeType":"158","messageId":"159","endLine":11,"endColumn":19},{"ruleId":"156","severity":1,"message":"160","line":12,"column":8,"nodeType":"158","messageId":"159","endLine":12,"endColumn":15},{"ruleId":"156","severity":1,"message":"161","line":13,"column":8,"nodeType":"158","messageId":"159","endLine":13,"endColumn":16},"no-native-reassign",["164"],"no-negated-in-lhs",["165"],"no-unused-vars","'excelImport' is defined but never used.","Identifier","unusedVar","'ReactFC' is defined but never used.","'Column2D' is defined but never used.",["164"],["165"],"no-global-assign","no-unsafe-negation"]